{
    "version": "https://jsonfeed.org/version/1",
    "title": "The David Dias",
    "home_page_url": "https://thedaviddias.dev",
    "feed_url": "https://thedaviddias.dev/rss/feed.json",
    "description": "A articles about web development, technologies, expatriation and anything that piques my curiosity and interest",
    "icon": "https://thedaviddias.dev/favicon.ico",
    "author": {
        "name": "David Dias",
        "url": "https://twitter.com/thedaviddias"
    },
    "items": [
        {
            "id": "https://thedaviddias.dev/notes/how-to-fix-post-pre-build-pnpm",
            "content_html": "\nWhen recently working on my blog, I tried to add a `postbuild` scripts with `next-sitemap` in my `package.json`. My goal was to automatically generate `.xml` files after each Next.js builds.\n\nUsing [pnpm](https://pnpm.io/), I found out that my `postbuild` was working with `npm` but not `pnpm`.\n\nI found out [this issue](https://github.com/pnpm/pnpm/issues/2891) on Github mentionning the same problem I encountered. It seems that pre/posts scripts are not activated if using pnpm.\n\nI found the solution adding the line below in my `.npmrc` local file:\n\n```.bash:.npmrc\nenable-pre-post-scripts=true\n```\n\nNow I can use pre/posts scripts and `pnpm`. I hope this could save you some time!\n",
            "url": "https://thedaviddias.dev/notes/how-to-fix-post-pre-build-pnpm",
            "title": "How to fix \"postbuild\" and \"prebuild\" not working with pnpm?",
            "summary": "Find out what I had to update to use pre and posts scripts with pnpm.",
            "date_modified": "2022-07-30T04:38:32.569Z",
            "author": {
                "name": "David Dias",
                "url": "https://twitter.com/thedaviddias"
            }
        },
        {
            "id": "https://thedaviddias.dev/notes/finally-received-steam-deck-confirmation-email",
            "content_html": "\nThis was a long wait! After months of lurring on Youtube watching others playing with their Deck, I finally got **my purchase confirmation email** for the Steam Deck!\n\n![](/images/notes/steam-deck-email-purchase.jpg)\n\nWhat kept me sane during this time was probably [this tool](https://getmydeck.ingenhaag.dev/s/US/256/1626745255) created by [Labidou51](https://www.reddit.com/u/Labidou51). I was able to get a sense of when I would receive the email confirmation.\n\n<Tweet url=\"https://twitter.com/TheDavidDias/status/1553069456704020480?s=20&t=5VHTZkURrFadrkG3H1nU1Q\" />\n\nSome more days to wait and I hope to get this new amazing piece of tech (it's a computer) in my own hands! Maybe I can find a [nice skin on Dbrand](https://dbrand.com/shop/steam-deck-skins) in the meantime üòú?!\n",
            "url": "https://thedaviddias.dev/notes/finally-received-steam-deck-confirmation-email",
            "title": "Finally received my Steam Deck confirmation email!",
            "date_modified": "2022-07-28T15:47:33.508Z",
            "author": {
                "name": "David Dias",
                "url": "https://twitter.com/thedaviddias"
            }
        },
        {
            "id": "https://thedaviddias.dev/articles/how-front-end-developers-ui-ux-could-better-collaborate-together",
            "content_html": "\nThe web has changed so much in the past 10 years. Technology has enabled new usages, new ways of communication, new ways of seeing the world. Web Design trends are also constantly changing, every year we see new trends that sometimes stick for few years, sometimes they don‚Äôt. The same happened in web development: we‚Äôve seen new JavaScript frameworks, new ways to build components, new ways to code CSS, using pre or post-processors. The list is almost infinite. But something that has not changed is the need for collaboration between people working on the same web project.\n\n![](/images/articles/how-front-end-developers-web-and-ux-ui-designers-could-better-collaborate-together/featured.jpeg 'Photo by <a href=\"https://unsplash.com/@joshcala?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Josh Calabrese</a> on Unsplash')\n\nAs a Front-End Developer, I had the chance to work with numerous Web Designers and UX/UI designers over my career. No matter if I was in Brazil, France, Mauritius or Canada, **I have observed the same challenges over and over again**. And one unique solution doesn‚Äôt always apply to similar situations. You need to find what works best for you.\n\nIn this article, I want to share some topics I believe should be discussed. From my point of view, we, as web professionals want the same thing: **build accessible and performant products that will provide the best user experience possible**.\n\nIf you want your product to work, to get revenues, then you should start with the above goal first, not the other way around.\n\nBut let‚Äôs start with some definitions.\n\n## What is a Web Designer?\n\n![](/images/articles/how-front-end-developers-web-and-ux-ui-designers-could-better-collaborate-together/photoshop-design-desk.jpeg 'Photo by <a href=\"https://unsplash.com/@easiblu?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Eftakher Alam</a> on Unsplash')\n\nA lot of people could probably define what is a Web Designer better than I. But from my perspective, as a Front-End Developer, a **Web Designer is someone with extensive skills in design that understands the constraints and the possibilities given by the web**. I‚Äôve seen a lot of really good ‚Äúdesigners‚Äù but who were not always able to fully understand the ‚Äúweb‚Äù part of their title. Designing for the web is far from being straightforward. Be familiar with how to use [Sketch](https://www.sketch.com/) or [Figma](https://www.figma.com/) is surely part of being a Web Designer, but it‚Äôs unfortunately not enough. And honestly, for me it‚Äôs totally fine: you learn as you progress.\n\nProbably, from my point of view, a Web Designers shouldn‚Äôt just rely on his knowledge and put pressure on himself to know everything about the web. That‚Äôs where a Front-End Developer can come into play. Front-End Developers are the ones that spend their time on the web, scrolling, studying code, finding new ways of building components‚Ä¶ They are the perfect buddies of Web Designers, and both should be pairing regularly.\n\n## What is a UX/UI Designer?\n\n![](/images/articles/how-front-end-developers-web-and-ux-ui-designers-could-better-collaborate-together/wireframe-design-table.jpeg 'Photo by <a href=\"https://unsplash.com/@kellysikkema?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Kelly Sikkema</a> on Unsplash')\n\n**A UX/UI Designer is someone where focus lays on users**. Nothing should be more important than the user, the person, the human. A UX Designer needs to spend a lot of his time doing researches. I‚Äôve always considered that a good UX/UI Designer should be passionate about people, what they want, how they want things‚Ä¶ Of course, you also have the word ‚Äúdesigner‚Äù in the title, because in the context we are talking about, a UX/UI Designer has the task to understand the user and also know what works the best in terms of UI. Something that works for a website dedicate to moms may not work for a website which main users are teens.\n\n> I‚Äôve always considered that a good UX/UI Designer should be passionate about people, what they want, how they want things.\n\nBut he is not the only one who has developed an understanding of what users prefer and are used to when they browse the Internet. When a Front-End Developer wants to create a piece of code, a component, he usually dives into his structured memory of patterns. When someone says ‚Äúbutton‚Äù, it triggers in his brain all the times (thousands of) he clicked on a button, but also snippets of CSS code that can be used to create a button or the long hours he spent analyzing CSS framework documentation‚Ä¶\n\nFront-End Developers can be a huge asset for any UX/UI Designer because they‚Äôve learned so much about the web and usual patterns from a different perspective.\n\n## What is a Front-End Developer?\n\n![](/images/articles/how-front-end-developers-web-and-ux-ui-designers-could-better-collaborate-together/computer-windows-white-table.jpeg 'Photo by <a href=\"https://unsplash.com/@nublson?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Nubelson Fernandes</a> on Unsplash')\n\nI know a lot of people that could potentially disagree with my definition. For me, a **Front-End Developer is a builder, someone that loves building web content using a combination of multiple skills**. Because a Front-End Developer is not just a coder. To be a Front-End Developer you need to learn HTML, CSS, JavaScript but these are just the basics. You need to understand how to make a [website accessible](https://www.w3.org/WAI/fundamentals/accessibility-intro/), how to use CSS to create an amazing layout, how to translate a design file to CSS, how to keep your application performant, how to build a [UI/pattern library](https://storybook.js.org/)‚Ä¶ the list is long but I‚Äôm sure you get my point.\n\nA Front-End Developer is the backbone of any web content. Without a Front-End Developer, the website couldn‚Äôt be created (even if you use a no-code generator, a Front-End Developer had to create the UI).\n\nDoes that mean that a Front-End Developer is more important than other people in their team? Absolutely not, but his role requires him to **be a facilitator, to understand what he can provide for the rest of his team**.\n\n## A Web Designer, UX/UI and Front-End Dev enter together in a bar‚Ä¶\n\nNow that we have a better idea of what these roles represent, how do we make them work together in a way that they feel empowered and enjoying the collaboration?\n\n### It‚Äôs about mindset\n\nAny athlete will tell you that mindset is everything to achieve their goals, to win championships, to perform better. This is not that different when it‚Äôs about working as a team. Everyone‚Äôs mindset is important within a team. But it‚Äôs something that the group itself doesn‚Äôt have any control. Only individuals can decide to have an open mind, a true relationship with the other member of the team, visualize solutions instead of problems‚Ä¶\n\nWe often forget that we all have a common goal. Sure, we can also have multiple goals for ourselves but if you are part of a team, it‚Äôs only to achieve a common goal.\n\nDifferences are what make this specific group worth existing. EVERYONE has a role to play in any team.\n\n### It‚Äôs about culture\n\nBut it‚Äôs not only about individual mindsets. A team with a Web Designer, UX/UI and developers are usually part of a corporation. All over the world, [numerous companies understand and value their culture](https://hbr.org/2020/01/how-corporate-cultures-differ-around-the-world). This is an essential part to guide employees towards common goals and achieve specific tasks.\n\nIf companies provide the tools and the support to create trust and equality between the members of a team, then it makes it easier for people to collaborate together and learn from each other.\n\n### It‚Äôs about ego\n\nAaah the ego! Some people say that a bad reputation can hurt any company, I believe ego can hurt sometimes even more. The ego is one of the biggest enemies of any company, team or leadership group. I had the displeasure to work with 1‚Äì2 people during my career with a pretty big ego.\n\nI will always feel the pain these people have caused, it‚Äôs important to make peace with any related event but also with them. After all, we are all humans.\n\nEgo shouldn‚Äôt exist in a team. Period.\n\n### It‚Äôs about collaboration\n\nCollaboration is knowing that people are better than you in certain areas. It‚Äôs knowing that you can learn from them. It‚Äôs knowing that you can also give something to them. Collaboration is finding the balance and putting everything and everyone at the center of the group.\n\nAnd no, collaboration is not something you implement once and it‚Äôs done, everything will always work perfectly. Collaboration is an equilibrist performance that could go wrong at any time. But you have to keep going because it‚Äôs so rewarding when you succeed!\n\n## How to get your team to work together?\n\nBefore giving you some answers, I want to tell you about two of the best experiences I had during my career with Web / UX / UI Designers.\n\n![](/images/articles/how-front-end-developers-web-and-ux-ui-designers-could-better-collaborate-together/whiteboard-collaboration-wireframe.jpeg 'Photo by <a href=\"https://unsplash.com/@kaleidico?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Kaleidico</a> on Unsplash')\n\n### My two best experiences with Designers\n\n**My first best experience was in August 2014**, in Cincinnati, USA. I‚Äôve worked for a month with Barefoot Proximity to build a new platform. [Julie Tran](https://www.linkedin.com/in/tranje/), which was leading the project in terms of design would create pieces of design, sent them to me for prototyping and we would discuss around that. What made the experience amazing was the level of exchange and collaboration.\n\nIt wasn‚Äôt just about, ‚ÄúHey, here is the design‚Äù, it would be more ‚Äúhey, here is the design, can you do a quick prototype to see if that works. Let me know if you see any problems that may occur for mobile, accessibility etc‚Ä¶‚Äù.\n\nI was able to give my feedback based on my knowledge and experience, Julie would also push back when I would be hesitant to test a particular approach. Combining our visions, being open with each other was what made this project successful. Even with my English being pretty basic at this time, we both enjoyed our work and I kept only good memories from that collaboration.\n\n**My second best experience was in 2015**, with [Julia Bruyneel](https://www.linkedin.com/in/juliabruyneel/), who was working in Paris as a Web/UX Designer freelancer. I was in Mauritius for a month and we had to collaborate for few weeks on new designs for an existing project.\n\nEven with the distance, and not knowing each other before, Julia would contact me and exchange about designs she would have made. That simple communication and regular exchange were reassuring for me (was lead on that project for 3 years) but also a manifestation of maturity and professionalism from Julia. It was short but I kept good memories of that collaboration.\n\n## Mindset, culture and processes\n\nThe **three main keys**, from my unique point of view, to have successful teams rely on mindset, culture and processes.\n\n![](/images/articles/how-front-end-developers-web-and-ux-ui-designers-could-better-collaborate-together/mindset-culture-processes.png 'Mindset, culture and processes are the 3 keys for better collaboration')\n\n**Mindset**: If you want to have people working together, in collaboration, using each other experience and vision, they need to have a similar mindset. I‚Äôm not saying an ‚Äúidentical mindset‚Äù or ‚Äúsame personalities‚Äù, I‚Äôm saying ‚Äúsimilar mindset‚Äù. When everyone understands the goal of the team and is open to see each human behind his title, then you have more probabilities to have a successful team.\n\n**Culture**: Sometimes, having a similar mindset is not possible or challenging. In that case, is the responsibility of the structure or company to influence a specific mindset. Companies can decide who should be part of the ‚Äúfamily‚Äù. That‚Äôs why the recruitment process is important.\n\n**Processes**: a lot of people I know, hate the word processes. For me, processes have always mean freedom. When you have a defined and clear process, you don‚Äôt have to stress or be hesitant or afraid. A process should exist to guide you in a process where people can predict what will come next. It‚Äôs reassuring to know that everyone has the same process in mind. Sometimes, when people's mindsets are not similar or the culture is lacking, processes should help people to visualize the direction they need to take.\n\nYou could take these **3 points separated or combine them to maximize your chances** to build successful teams.\n\n## What Web / UX / UI Designers should know about Front-End Developers (letter dedicated to designers)?\n\n> ‚ÄúWe love the web and we love being part of the creation process! We decided to become Front-End Developers because we love building! And it‚Äôs not just about converting designs to CSS, we love understanding the why, the how of the creation.\n> And we understand that this may be scary at times because why the heck a Front-End Developer will tell a designer that his design is not accessible? Or tell the designers that he is not sure, this is gonna work for the user? It‚Äôs not about competing, it‚Äôs about putting energies in sync.\n> The problem sometimes is that we see patterns and code examples in our minds that we don‚Äôt always translate for other people to understand. But we‚Äôre working on that! I promise!\n> We have more to share than just our ‚Äútitle‚Äù, we have more to give than just lines of code. We are here to help!‚Äù\n\n## The main takeaways from this article\n\nIf you are still reading, I hope you also share some common ideas exposed in this article. I have dedicated a portion of my career to try to be a facilitator and share all the knowledge I accumulated to build awesome products.\n\n- Teams composed of Web Designers, UX/UI Designers and Front-End Developers sharing a **similar mindset** have more chances of success.\n- An internal culture that encourages **collaboration and equality** between professionals will always produce the best results.\n- Enforcing best practices through **processes will help to make things more predictable and reassuring**.\n- The ego is one of the worst enemies of teamwork. **You shouldn‚Äôt have any space for ego**.\n- A Front-End Developer is just a passionate professional **who wants to be part of the creation process** and not just at the end. His integration along the project will ensure the success of any project.\n\n---\n\nWhat about your experience? How do you like to work with others? What would you like to see happening more often within your team?\n",
            "url": "https://thedaviddias.dev/articles/how-front-end-developers-ui-ux-could-better-collaborate-together",
            "title": "How Front-End Developers, Web and UX/UI Designers could better collaborate together?",
            "summary": "Collaboration between Developers and UX/UI Designers is essential to build a good product. With the right mindset, clear processes and an inclusive culture, everything is possible.",
            "date_modified": "2021-06-13T22:27:03.206Z",
            "author": {
                "name": "David Dias",
                "url": "https://twitter.com/thedaviddias"
            }
        },
        {
            "id": "https://thedaviddias.dev/articles/9-best-practices-ux-for-two-factor-authentification",
            "content_html": "\nIn 2023 alone, cybercriminals will steal 33 billion records. It takes 196 days on average to identify a data breach. The cost of a data breach will reach $150 million by 2020...\nThese numbers may be scary but they are only previsions. Things could be much worse in the near future. Security has become a hot topic these last years, almost everyone on the planet has already heard about a company data breach or even a friend that lost his Facebook account because someone hacked it! No one is completely safe nowadays.\n![Photo of a white lock icon on a purple fullscreen background displayed on a cellphone screen](/images/articles/9-best-practices-ux-for-two-factor-authentification/featured.jpg)\n\nI've recently spent multiple hours ensuring that all the accounts I possess use a unique password, complex and long with at least 20 characters and with the two-factor authentication (2FA) enable if present. I've discovered so many disparities between companies and so many issues in terms of features and user experience. I wanted to share with you in this article, what I believe are the best and recommended features for any website or company that takes the security of their users seriously.\n\n## 1. Offer two-factor authentication options\n\nThat is the starting point.\n\nIf you care about your users or customers, you should give them the choice to activate the two-factor authentication. On around 800 websites where I have an account, **only 5% offer a 2FA option**. Some may argue that if you don't have highly sensitive information, it may be overkill to offer the 2FA. But any personal information could be considered sensitive.\n\nIf you care about your users and their security, give them the option to enable the 2FA. Period.\n\n## 2. Don't force the users to choose only one 2FA method\n\n[Google](https://www.google.ca/landing/2step/), [Facebook](https://www.facebook.com/help/148233965247823), [Twitter](https://help.twitter.com/en/managing-your-account/two-factor-authentication)... they all offer simultaneous ways for 2FA: text message, authentication app and security key. More commonly, at least in a text message and authentication app, the security key seems to be set up only on certain services.\n\nBut I've been surprised to see [Etsy](https://help.etsy.com/hc/en-us/articles/115015569567-How-to-Make-Your-Account-More-Secure?segment=shopping), even they use toggles on their UI, to force you to only choose one of the options. I'm not even sure if it was originally designed to work like that.\n\n![Screenshot of the two-factor options on Etsy](/images/articles/9-best-practices-ux-for-two-factor-authentification/etsy.jpg 'The two-factor options on Etsy')\n\n[Bit.ly](https://support.bitly.com/hc/en-us/articles/230650187-What-is-2-step-verification-) and [booking.com](https://partner.booking.com/en-gb/help/legal-security/what-2-factor-authentication-2fa) in other hand only allow you to use your phone as a 2FA device. So if you lose your phone and your email access, you could be screwed.\n\n![Screenshot of the verification code form on Booking.com. A verification code field is showed empty with a blue button below saying \"Verify and sign in\"](/images/articles/9-best-practices-ux-for-two-factor-authentification/booking.jpg 'The verification code view on Booking.com')\n\n[Mailchimp](https://mailchimp.com/help/set-up-a-two-factor-authentication-app-at-login/) and [Tumblr](https://tumblr.zendesk.com/hc/en-us/articles/226270148-Two-factor-authentication), on the contrary, only offer 2FA using an authentication app.\n\n[Zapier](https://zapier.com/help/account/manage-account/set-up-two-factor-authentication-for-your-zapier-account) has an awesome step by step 2FA setup, probably one of the best I found. They offer multiple complementary ways and specifically tell you \"in the event you get locked out of your account and have lost both your authentication device and recovery codes\". The user understands that providing his phone number is an additional way to ensure he/she can access his account in case he/she lost the other ways to connect to their web app.\n\n![Screenshot of the two-factor set by step setup on Zapier. Currently showing the \"Emergency Verification\" step which contains a Phone Number field with a verification code field.](/images/articles/9-best-practices-ux-for-two-factor-authentification/zapier.jpg 'The two-factor set by step setup on Zapier')\n\n## 3. Make the QR code an image\n\nI have been using [1Password](https://1password.com/) for quite some time now and the modal that scans the QR code doesn't always find the QR code. In that case, I found myself drag and dropping the QR into that modal to be recognized. But it only works when the code is an image.\n\nI would recommend having it as a format image that can be saved / drag and dropped.\n\n[Reddit](https://www.reddit.com/) for example don't have the QR code as an image. Fortunately, everyone offers the text version of the QR code that you can use in your authentication application.\n\n## 4. Keep the code you send by email in the same format as requested in your app or website\n\nThis one only happened to me once. It happened with Instagram.\n\nWhen [Instagram](https://help.instagram.com/843785199163974) sends a \"verification code\" by SMS, they included a space. If you copy-paste that code where it's required, first the input doesn't want the space and the last digit is not included in your paste. It's an annoying issue that could be fixed easily!\n\n![Instagram verification SMS code](/images/articles/9-best-practices-ux-for-two-factor-authentification/instagram-login-code-space.jpg 'Instagram verification SMS code')\n\n## 5. Give the option to have recovery/backup codes\n\nSounds weird when said at loud but a lot of websites don't offer backup/recovery codes when you enable the 2FA. This was a surprise for me at first, **2FA means you will always have backup codes in case you lost access** to your phone, email or the app you use to generate the random number. Nowadays, some websites don't offer that option. I tend to be really careful with those.\n\n[Kickstarter](https://help.kickstarter.com/hc/en-us/articles/115005127094-How-can-I-enable-two-factor-authentication-) and [WPEngine](https://wpengine.com/support/multi-factor-authentication/) are examples of websites that don't offer you any recovery/backup codes. I hope they could improve that.\n\n![The Kickstarter security modal](/images/articles/9-best-practices-ux-for-two-factor-authentification/kickstarter.jpg 'The Kickstarter security modal')\n\n## 6. Always give the option to download the recovery codes\n\nMost of the websites propose to copy the recovery codes. This is not the best option.\n\nIt's nice to have it, sure, but it's not enough. I personally store all my recovery codes in multiple places: one is the [vault from Dropbox](https://www.dropbox.com/features/security/vault). Having just to drag and paste a simple text file is easy and fast.\n\nIf you offer only the option to copy, then you could be forcing the user to:\n\n1. open the text editor\n2. paste the codes\n3. give a name\n4. save the file on your device\n\nTechnology is there to save user's time.\n\n[Slack](https://slack.com/intl/en-ca/help/articles/204509068-Set-up-two-factor-authentication) for example allows you to \"Print codes\" but not download them. Why not? I have to generate a PDF instead of my simple text file. Not the best user experience.\n\n![The Two-Factor Authentication Backup Codes modal on Slack](/images/articles/9-best-practices-ux-for-two-factor-authentification/slack.jpg 'The Two-Factor Authentication Backup Codes modal on Slack')\n\n## 7. In the recovery code text file, always write which platform these codes are coming from\n\nEven Facebook can make mistakes and this one is important for me. Currently, if you download the recovery codes from Facebook, you open the file and you can't find any mention of Facebook or the name of the account. The file name `facebook_recovery_codes` is helpful but in my opinion, not enough. **The name of the account and the name of the platform should be a minimum.**\n\nAnd to make it more useful, adding the date when the codes were generated could also be added.\n\nGoogle which is a good example, uses your username in the name of the file, and also adds:\n\n```text\nSAVE YOUR BACKUP CODES\nKeep these backup codes somewhere safe but accessible.\n\nLIST OF CODES\n\n(email@gmail.com)\n\n* You can only use each backup code once.\n* Need more? Visit https://g.co/2sv\n* These codes were generated on: Date, 2021.\n```\n\n## 8. Allow the user to regenerate recovery/backup codes\n\nIt's essential to give the user the ability to regenerate recovery codes. Some don't offer this useful option.\n\n## 9. Offer more than one code (maybe?)\n\nThis one is less important but I still wanted to mention a key difference in terms of recovery/backup codes.\n\nMost of the companies only offer one code vs a list of multiples codes that can be used. It's hard for me to defend one approach vs the other one. I just know that I feel better when I have more than one code.\n\n## About security keys\n\nSecurity keys are the less common way to secure your account. If you are a public figure or someone with a high level of responsibility, having a security key could give you a little bit more peace of mind. But for a normal user, it may be overkill. Nonetheless, I wanted to maximize the security of my accounts and recently bought the [Titan Security Key](https://store.google.com/ca/product/titan_security_key) from Google. The USB version works on any computer and I use the Bluetooth version in case I'm on my iPhone or iPad.\n\n![The white box of the Titan Security Keys by Google showing the bluetooth and USB 3.0 key](/images/articles/9-best-practices-ux-for-two-factor-authentification/titan-security-keys.jpeg 'The box of the Titan Security Keys by Google')\n\nThey both are not cheap, but security should be part of your \"unlimited budget\", the same as for food.\n\n## Conclusion\n\nI'm not a security expert and have limited knowledge in terms of security. But as a Software Engineer and particularly a user, I believe we have a long way ahead until most of the platforms implement all the tools to ensure secure access for users.\n\n_Recap:_\n\n1. Offer two-factor authentication options\n2. Don't force the users to choose only one 2FA method\n3. Make the QR code an image\n4. Keep the code you send by email in the same format as requested in your app or website\n5. Give the option to have recovery/backup codes\n6. Always give the option to download the recovery codes\n7. In the recovery code text file, always write which platform these codes are coming from\n8. Allow the user to regenerate recovery/backup codes\n9. Offer more than one code (maybe?)\n\nThanks for reading, I hope these suggestions would help you to have a better UX and improve your 2FA implementation.\n\nFeel free to ask me anything in the comments below!\n",
            "url": "https://thedaviddias.dev/articles/9-best-practices-ux-for-two-factor-authentification",
            "title": "9 Best Practices & UX Improvements for the two-factor authentication (2FA)",
            "summary": "The best and recommended features for any website or company that takes the security of their users seriously.",
            "date_modified": "2021-02-25T00:01:00.000Z",
            "author": {
                "name": "David Dias",
                "url": "https://twitter.com/thedaviddias"
            }
        },
        {
            "id": "https://thedaviddias.dev/articles/how-to-deploy-your-nextjs-app-on-netlify-using-github-actions",
            "content_html": "\nI've recently spent some time working with Next.js projects. Once my projects are done, the next logical step is to deploy these apps to be accessible to the world.\n\nI have naturally used the [Vercel platform](https://vercel.com/), which couldn't be easier to use and deploy your application with ease. Then I tried [AWS Amplify](https://aws.amazon.com/amplify/), which I particularly love but for now, requires you to use the [Serverless Framework](https://docs.amplify.aws/start/getting-started/hosting/q/integration/next) if you want to benefit from Server Side Rendering (SSR) capabilities.\n\nThen, I remembered that Netlify has added support for Next.js, including dynamic routes, Preview Mode and more around November 2020. It was time for me to try it! But I also wanted to have a real CI/CD in place, to test my code and do more actions before deploying to Netlify. That's where Github Actions came to the rescue!\n\nI'm going to describe in this article, all the steps you need to take to deploy your Next.js application on Netlify using Github Actions.\n\n> The full version of the project can be [found on Github](https://github.com/thedaviddias/next-netlify-github-actions-starter).\n\n## Create a new Next.js App and push it to Github\n\nAs always, you need to have a recent version of Node and NPM installed on your machine. I personally recommend using `NVM` since it simplifies having multiple active Node.js versions.\n\nTo create a new Next.js project, type this command in your CLI:\n\n```bash\nnpx create-next-app name-of-your-app\n\n# move into the app's root directory\ncd ~/path-to-projects/name-of-your-app/\n```\n\nThis will install a new application using a basic Next.js boilerplate. Don't forget to move to your app root folder before launching any next commands.\n\nOnce your Next.js project is locally created, you can create a new project on Github and push the code generated.\n\n_(For those you are new to coding, feel free to [follow these steps](https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-new-repository) to create a new repository on Github.)_\n\n## Setting up your Netlify project\n\nThere are 2 ways of creating a new Netlify project:\n\n- Creating a project online [here](https://app.netlify.com/)\n- Using the Netlify CLI.\n\nLet's use the CLI this time, I'm sure you already created a new project in the past using the Netlify interface.\n\nLet's start by installing `netlify-cli` globally:\n\n```bash\nnpm install netlify-cli -g\n```\n\nThen check if the installation succeeds, confirming with this command:\n\n```bash\nnetlify\n```\n\n### Netlify account authentication\n\nNow you need to link your computer with your Netlify account. To authenticate with Netlify, you need to run this command:\n\n```bash\nnetlify login\n```\n\nThis will open a new tab in your browser where you'll need to \"Authorize your Application\" and then grant access to Netlify CLI.\n\nIn case you already logged in previously, the console will output:\n\n```bash\nAlready logged in via netlify config on your machine\n```\n\n### Netlify project creation\n\nNow that your CLI is authorized to communicate with your Netlify account, it's time to programmatically create a new project:\n\n```bash\n# create a new Netlify site using the Netlify shortcut: ntl\nntl init\n```\n\nThe first question you are asked is if you want to connect this directory to an existing Netlify site or create & configure a new site. Choose **Create & configure a new site**:\n\n![Connect to an existing directory or create and configure a new site](/images/articles/connect-existing-direction.jpeg)\n\nThen you have to choose your **team**:\n\n![Question about the name of the team](/images/articles/question-name-team.jpeg)\n\nChoose the **name of your application**:\n\n![Screenshot of the CLI asking for the name of your application](/images/articles/cli-name-application.jpeg)\n\nAfter entering the name of your project, the site is created and few URLs populated the CLI which gave you access to your admin URL, the URL of your site and the Site ID. Keep the site ID aside, you will need that number later on.\n\nFor the next 3 questions (build, start and function), **insert a space**. We are not going to directly use the NPM scripts, our Github actions will later trigger each command.\n![Screenshot of the CLI with the build, start and function script command suggestion](/images/articles/cli-build-start-function-script.jpeg)\n\nFinally, automatically create a netlify.toml file, which we will edit later. If your respond no, you can still create that file manually at the root of your project.\n\n![Screenshot of the CLI asking to create a netlify.toml file](/images/articles/automatically-create-netlify-toml.jpeg)\n\nOnce you provided an answer to all the questions, your terminal should look like this:\n\n![Screenshot of the CLI after all the questions are answered](/images/articles/cli-after-all-questions-answered.jpeg)\n\n## Updating our Netlify project\n\nIt's now time to change some options on our Netlify project. Open directly your project on Netlify with this command:\n\n```bash\nntl open\n```\n\n![Screenshot of the Netlify project created](/images/articles/netlify-project-created.jpeg)\n\nYou should see that our production deployment failed. You don't have to worry, this is totally normal. We need to disable our automatic build because our Github Actions will take care of it.\n\nGo in your Settings > Build & deploy. Click on `Edit settings` and `Stop builds`. Save.\n\n![Screenshot of the Build settings on Netlify](/images/articles/build-settings-netlify.jpeg)\n\nJust below, go to the `Deploy contexts` section and select `None` for the Deploy previews.\n\n![Screenshot of the Deploy context section on Netlify](/images/articles/deploy-context-section-netlify.jpeg)\n\nDon't worry, like the build, we will create our preview URL using Github actions.\n\n## Enable server-side rendering on Netlify\n\nIf you have been using Next.js you are aware of the capability to do the server-side rendering. But usually, you will need to configure a Node server and that's something we don't want to have to deal with. Around October 2020, the Netlify team started working on `next-on-netlify`, a utility to enable SSR in Next.js on Netlify. That's what we are going to use here.\n\n_(In case you are not interested in Github Actions and want to use Netlify to build your project, take a look at how to use the [Next on Netlify Plugin](https://github.com/netlify/netlify-plugin-nextjs). It directly wraps your Next.js app and doesn't need as much configuration as we are going to explain.)_\n\nLet's start by installing our utility:\n\n```bash\nnpm install -D next-on-netlify\n```\n\n### Set Next.js target to serverless\n\nWe must build our Next.js app as a serverless app\n\n```javascript:next.config.js\nmodule.exports = {\n  // Target must be serverless\n  target: \"serverless\",\n};\n```\n\n### Add a post build hook\n\nWe need to add a `postbuild` command that is automatically triggered after our `build` command finishes. `next-on-netlify` does a lot of \"magic\" to copy and set up our Next.js app to be correctly hosted on Netlify.\n\n```bash:package.json\n{\n  \"name\": \"next-netlify-github-actions-starter\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"postbuild\": \"next-on-netlify\"\n  },\n  ...\n}\n```\n\n### Configure Netlify\n\nRemember the file that was automatically created and called `netlify.toml`? You can remove all the boilerplate and replace it with only this code (be careful in respecting the indentation):\n\n```toml:netlify.toml\n[build]\n  command   = \"\"\n  functions = \"out_functions\"\n  publish   = \"out_publish\"\n```\n\nTechnically, when `next-on-netlify` will run, it will take what is in these folders and host it on Netlify. **_DO NOT CHANGE_** the name of these folders as these are hardcoded into the utility.\n\nDon't forget to add these line to your `.gitignore` file\n\n```git:.gitignore\n# Netlify build\nout_*\n```\n\nYou can commit your files. Let's work now on the Github Actions configuration.\n\n## Github Actions configuration\n\nThe netlify configuration is now done, all dependencies installed, it's time to configure our Github actions which will test, build and deploy our Next.js application to Netlify. But before that, we need to set up some Github secrets that we will need in our GH Actions.\n\nGo to your `Github project > Settings > Secrets > New repository secret`\n\n| Actions secret name  | Comments                                                                                    |\n| -------------------- | ------------------------------------------------------------------------------------------- |\n| `NETLIFY_AUTH_TOKEN` | Request your token [here](https://app.netlify.com/user/applications#personal-access-tokens) |\n| `NETLIFY_SITE_ID`    | The site to where deploy your site (get it from the API ID on your Site Settings)           |\n\n![Screenshot of the Actions secrets page on Github](/images/articles/actions-secrets-netlify.jpeg)\n\nCreate a new file called `main.yml` inside `.github/workflows`. Copy-paste the following code and read the explanation of it after this snippet.\n\n```yml:.github/workflows/main.yml\nname: Main workflow\n\non:\n  pull_request:\n    branches:\n      - master\n      - main\n    types: [opened, synchronize, reopened]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n\n      # Cache node modules and next folder\n      - name: üì¨ Caching\n        uses: actions/cache@v2\n        with:\n          path: |\n            **/node_modules\n            ${{ github.workspace }}/.next/cache\n          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}\n\n      - name: Use Node.js 14.x\n        uses: actions/setup-node@v1\n        with:\n          node-version: 14.x\n\n      - name: üß∞ Install dependencies\n        run: npm run install\n\n      - name: üì¶ Build project\n        run: npm run build --if-present\n\n      # - name: üßπ Run lint\n      #   run: npm run lint\n\n      # - name: üêõ Run tests\n      #   run: npm run test\n\n      # Deploy to Netlify with a personalized message\n      - name: üöÄ Deploy to Netlify\n        id: deploy-netlify\n        uses: netlify/actions/cli@master\n        env:\n          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}\n          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}\n        with:\n          args: deploy -m 'v${{ steps.package-version.outputs.current-version}} „Éª ${{ github.head_ref }}'\n```\n\n### Detailed explanation of the main workflow file\n\n1. **_Give a name_** to your Github action\n2. Choose which **_type of the event_** should trigger this action, you can use push instead of pull_request, it's up to you.\n3. Specify on **_which system_** this action should be launched, I choose the latest version of Ubuntu (Linux).\n4. **_Checkout your code_**\n5. **_Cache your node modules_** and the .next/cache folder. When you will first run this action, it will take some time. On the second launch, the action will take the modules that exist in the cache and will then proceed way faster.\n6. Specify the **_version of Node_** you want to use, in my case, I choose the most recent version of Node 14th.\n7. **_Install the dependencies_** of your project.\n8. **_Build your project_**. Remember that after the build, the post-build command will be launch. This is what you should see in the `build` logs in your Github Action tab:\n   ![Screenshot of the build-in Github Action](/images/articles/build-in-github-action-netlify.jpeg)\n9. I added lint and test commands, which I commented. You can use these to trigger ESLint, Jest (even Cypress) or any other plugin that ensures your code doesn't have any issue.\n10. Finally, we trigger the Netlify deployment to deploy our Next.js app to Netlify. üéâ\n\n![Screenshot of all Github actions](/images/articles/all-github-actions-netlify.jpeg)\n\nYou may have seen an argument passed to the Netlify deploy:\n\n```yml:.github/workflows/main.yml\nargs: deploy -m 'v${{ steps.package-version.outputs.current-version}} „Éª ${{ github.head_ref }}'\n```\n\nThis will add a message for each Deploy Preview, a way to keep track of which PR generated which Deploy.\n\n![Screenshot of the Deploy page on Netlify](/images/articles/deploy-netlify-preview.jpeg)\n\nOn the same deploy page, you can click on the Deploy Preview and access your app using the preview URL.\n\nA better way would be to use another task to automatically populate your pull request with the log and preview URL. At the end of your file, add this action:\n\n```yml:.github/workflows/main.yml\n# Publish the inspect and preview link to the PR\n- name: üëì Netlify Preview URL\n  uses: unsplash/comment-on-pr@master\n  env:\n    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n    OUTPUT: \"This pull request is being automatically deployed to Netlify.\\n\\nüîç Inspect: ${{ steps.deploy-netlify.outputs.NETLIFY_LOGS_URL }}\\n‚úÖ Preview: ${{ steps.deploy-netlify.outputs.NETLIFY_URL }}\"\n  with:\n    msg: ${{ env.OUTPUT }}\n    check_for_duplicate_msg: false\n```\n\nThis will automatically create a comment in your PR.\n\n![Screenshot of the PR on Github specifying the link to the logs and preview deploy URL](/images/articles/pr-github-preview-deploy-url.jpeg)\n\n## Summary\n\nIf you are still reading this, congrats! You have succeeded in deploying a fully enabled Next.JS application to Netlify using Github Actions!\n\nThe next step for you now will be to add some linting rules and tests to ensure that you are sending to Netlify, an app that works perfectly!\n\nFeel free to [download or fork the `next-netlify-github-actions-starter`](https://github.com/thedaviddias/next-netlify-github-actions-starter), open an issue if you find any problem or send me any suggestion to make it better!\n\n### Sources:\n\n- [How to Deploy Next.js Sites to Netlify](https://www.netlify.com/articles/2020/11/30/how-to-deploy-next.js-sites-to-netlify/) by Jason Lengstorf\n- [Preview Mode for Next.js now fully supported on Netlify](https://www.netlify.com/articles/2020/10/27/preview-mode-for-next.js-now-fully-supported-on-netlify/) by Cassidy Williams\n- [Announcing one-click install Next.js Build Plugin on Netlify](https://www.netlify.com/articles/2020/12/07/announcing-one-click-install-next.js-build-plugin-on-netlify/) by Cassidy Williams\n",
            "url": "https://thedaviddias.dev/articles/how-to-deploy-your-nextjs-app-on-netlify-using-github-actions",
            "title": "How to deploy your Next.js app on Netlify using Github Actions",
            "summary": "Are you interested in Next.js and how to deploy your app to Netlify using Github Actions? Take a look at how Netlify allows you for free, to deploy your app with Server Side Rendering capabilities and more!.",
            "date_modified": "2021-01-21T00:01:00.000Z",
            "author": {
                "name": "David Dias",
                "url": "https://twitter.com/thedaviddias"
            }
        },
        {
            "id": "https://thedaviddias.dev/articles/you-have-something-in-you-the-world-needs",
            "content_html": "\nI‚Äôm not a psychologist or either a student in psychology. I spent a good amount of time in my life reading personal development books but in the end, I‚Äôm just a Front-End Web developer, who writes code. I had the chance to live in different countries and created real and profound relationships with people with different cultures, different colors, different ages, different religions, different visions of the world‚Ä¶ I couldn‚Äôt imagine my life without all these persons and what they brought to my existence.\n\n![A woman is a globe](/images/articles/you-have-something-in-you-the-world-needs/featured.jpeg 'Photo by <a href=\"https://unsplash.com/@benwhitephotography?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Ben  White</a> on Unsplash')\n\nTalking and sharing life‚Äôs moments with all these people made me realized something you may know already: **most of the human beings struggle in being happy** and spend most of their lives, living in their past and acting or not acting based on numerous fears. Fear and past are the two biggest challenges that every human in history had to face.\n\n## Fear kills\n\nFear is more than just a word or a feeling you experimented watching horror movies. Fear is just the most powerful weapon that, in 2019, is killing more than any other weapon in the world.\n\nFear does not just kill physically people, fear kills **creativity, originality, growth, relationships, marriages, ideas, will, happiness‚Ä¶** Fear makes you feel bad at work because you think you don‚Äôt know enough, it pushes you to fail at the University: fear to not be good enough, fear to fail another relationship, fear to talk too much, fear to not talk enough, fear to be judged, fear to be invisible, fear to be different, fear to not be understood‚Ä¶\n\nWith all the social media platforms, we try to connect people, reduce the friction in creating new possible relationships, and it works. We have so many incredible situations, made possible thanks to all these platforms out there. But I don‚Äôt think it‚Äôs really enough to make people fearless. You can be a movie star, or a famous singer, at the end of the day, your memories, your past is there. You can‚Äôt really push the button rewind or delete. All of us need to learn to live with our past, our mistakes. And that‚Äôs probably one of the most complicated parts of being human.\n\nTake 2 minutes to analyze your day until now: I doubt you didn‚Äôt find any trace of fear pushing you to act or say something you didn‚Äôt really want to.\n\n## We can only accept our pasts\n\nWe can‚Äôt do anything to change our past, including yesterday. We can try to forget or think that we are not attached to it, and yes, you are right, our pasts don‚Äôt define who we are. But our pasts mold our personality and our beliefs, and beliefs are something so hard to change sometimes.\nWe can battle a whole life and try to change our pasts, but you know and I know that it‚Äôs a waste of time. Our pasts are all painful, we all have moments we would like to forget, people that make us feel bad, people that hurt us, friends, parents, that disappointed us, love relationships that created a hole in our heart‚Ä¶ Fortunately, not physically.\n\nSo what are our options? Actually, do we have options? Maybe we have an easy option. And if we tried to choose the one the majority chooses? That would work? I don‚Äôt think I have an answer that would make you feel happy. The only answer that I can think of, is that accepting our past, whatever happened, whatever you lived is probably the only way to live our present and feel that joy that exists in every little thing around you.\n\nI know what you may think: ‚ÄúEasy to say, hard to do‚Äù. Does anyone told you in your entire life: ‚ÄúThings are easy!‚Äù? Just ask you the question. Why most of us want something easy instead of something true. What happened in the history of humanity to make us believe that life equal **easy or hard**? Why can‚Äôt we just say that things are how they should be, and we need to choose the way we want to react when we are facing them? The way we choose to react and act is what matters.\n\n## Creating a barrier will never be the option\n\nWhen someone out there, our neighbor, a president, a friend decide to create a wall in their garden or between countries, we all think and believe that it is not a solution or even an option. But how many times, did we create a mental barrier between us and the world? How many times, did we get nervous because we don‚Äôt have full control over our life‚Äôs events? How many times, did we get angry because our child felt and instead of showing him love, we yell at him because we were afraid it could hurt himself? Afraid that next time, he could fall being alone? It‚Äôs easier to hide that fear behind that attitude than accepts and embrace that uncomfortable feeling of fear and react with love.\n\n![A red and white road block in front of a green door](/images/articles/you-have-something-in-you-the-world-needs/door-barriere.jpeg 'Photo by <a href=\"https://unsplash.com/@mattedpictures?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Matthew Garoffolo</a> on Unsplash')\n\nMaybe things in your life, made you create layers. Layers of protection to ‚Äúhelp you face life‚Äôs challenge‚Äù. Really? Are you feeling happiest since you closed some doors and people think you are a negative person? Is the world a better place because you hide your feelings and you are not able to cry anymore? I don‚Äôt think so.\n\nI wish I could have multiple lives (some people believe in it), but the one we all have is the one we are currently living. And we usually don‚Äôt regret things we did, but things we were not able to achieve and to do, like be open to our wife or husband, show to our kids that we are not perfect and that we made mistakes sometimes.\n\n## You can‚Äôt talk about life\n\nIn some cultures, some places in the world, you can‚Äôt really talk about fear and past. You can‚Äôt talk about the struggle you have in your life. A lot of people across history tried their best to remove some humanity in some cultures and who really wants to defeat centuries of culture which forces you to not be yourself? Things are not equaled in the world, but it‚Äôs not a reason to not try.\n\nWhat makes people think they can‚Äôt talk about their issues, once again, fear is probably behind that for most cases.\n\n![Woman in the dark looking down do a screen that reflects on her face. She looks tired.](/images/articles/you-have-something-in-you-the-world-needs/face-sad.jpeg 'Photo by <a href=\"https://unsplash.com/@hamann?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Niklas Hamann</a> on Unsplash')\n\nSometimes I‚Äôm not sure why, in a work environment, people can‚Äôt say ‚ÄúI don‚Äôt know, I‚Äôm not sure, I‚Äôm having doubts lately‚Ä¶‚Äù Is an issue to be human nowadays? Because I feel, I can‚Äôt work? Because I‚Äôm not sure, I will not be a good employee? Of course, a company is a place for you to work, help a company to grow and get more value in the market but is it not a place where humans live, breath and share emotions and moments?\n\nI met many people around the world that were themselves at home, but could never be themselves at work. Look at your right‚Ä¶ yeah, you found him/her!\n\n## What are you waiting for?\n\nThings are going fast, technologies like cryptocurrency, AI, VR, autonomous cars, all of that is changing and is going to change our worlds. But in the end, fears, layers, will always be there, and one day, a lot more people will have to seek help if they want to be free from all of that. Life will always be what it is, but all of us can improve other‚Äôs lives, being there when they need, sending a small message asking if everything is fine. We don‚Äôt really need to make big efforts to help our world to feel better. Believing that you can do a lot for the people around you is the first step.\n\nRight now, maybe a friend is waiting to receive a message from you. A signal to make him feel he is not alone. Have someone that can reassure him that his/her past will not define his/her tomorrow.\n\n‚Ä¶What are you really waiting for? üì≤\n\n_Disclaimer: I usually write articles about code, immigration, and tech, but a lot of my friends are lately facing the same issues, and even I try my best to help them, it‚Äôs also up to them to take action and choose the life they really want. This article is a way to hopefully help other people that may be facing the same issues in their lives. Let me a comment if you find this article relevant for your life!_\n",
            "url": "https://thedaviddias.dev/articles/you-have-something-in-you-the-world-needs",
            "title": "You have something in YOU that the world needs",
            "summary": "Sometimes the only thing you need to remember is that you are not alone in this world.",
            "date_modified": "2019-06-21T00:00:00.000Z",
            "author": {
                "name": "David Dias",
                "url": "https://twitter.com/thedaviddias"
            }
        },
        {
            "id": "https://thedaviddias.dev/articles/front-end-performance-checklist-speeds-up-web-developments",
            "content_html": "\nPerformance is a huge subject, but it's not always a \"back-end\" or an \"admin\" subject: it's a Front-End responsibility too. The Front-End Performance Checklist is an exhaustive list of elements you should check or at least be aware of, as a Front-End developer and apply to your project (personal and professional).\n\n### How to use?\n\nFor each rule, you will have a paragraph explaining _why_ this rule is important and _how_ you can fix it. For more deep information, you should find links that will point to üõ† tools, üìñ articles or üìπ medias that can complete the checklist.\n\nAll items in the **Front-End Performance Checklist** are essentials to achieve the highest performance score but you would find an indicator to help you to eventually prioritised some rules amount others. There are 3 levels of priority:\n\n- ![Low][low] means that the item has a **low** priority.\n- ![Medium][medium] means that the item has a **medium** priority. You shouldn't avoid tackling that item.\n- ![High][high] means that the item has a **high** priority. You can't avoid following that rule and implement the corrections recommended.\n\n### Performance tools\n\nList of the tools you can use to test or monitor your website or application:\n\n- üõ† [WebPagetest - Website Performance and Optimization Test](https://www.webpagetest.org/)\n- üõ† ‚òÜ [Dareboost: Website Speed Test and Website Analysis](https://www.dareboost.com/) (use the coupon WPCDD20 for -20%)\n- üõ† [Treo: Page Speed Monitoring](https://treo.sh/?ref=perfchecklist)\n- üõ† [GTmetrix | Website Speed and Performance Optimization](https://gtmetrix.com/)\n- üõ† [PageSpeed Insights](https://developers.google.com/speed/pagespeed/insights/)\n- üõ† [Web.dev](https://web.dev/measure)\n- üõ† [Pingdom Website Speed Test](https://tools.pingdom.com)\n- üìñ [Make the Web Faster | Google Developers](https://developers.google.com/speed/)\n- üõ† [Sitespeed.io - Welcome to the wonderful world of Web Performance](https://www.sitespeed.io/)\n- üõ† [Calibre](https://calibreapp.com/)\n- üõ† [Website Speed Test | Check Web Performance ¬ª Dotcom-Tools](https://www.dotcom-tools.com/website-speed-test.aspx)\n- üõ† [Website and Server Uptime Monitoring - Pingdom](https://www.pingdom.com/product/uptime-monitoring/) ([Free Signup Link](https://www.pingdom.com/free))\n- üõ† [Uptime Robot](https://uptimerobot.com)\n- üõ† [SpeedCurve: Monitor front-end performance](https://speedcurve.com)\n- üõ† [PWMetrics - CLI tool and lib to gather performance metrics](https://github.com/paulirish/pwmetrics)\n- üõ† [Varvy - Page speed optimization](https://varvy.com/pagespeed/)\n- üõ† [Lighthouse - Google](https://developers.google.com/web/tools/lighthouse/#devtools)\n- üõ† [Checkbot browser extension - Checks for web performance best practices](https://www.checkbot.io/)\n- üõ† [Yellow Lab Tools | Online test to help speeding up heavy web pages](https://yellowlab.tools/)\n- üõ† [Speedrank - Web Performance Monitoring](https://speedrank.app/)\n- üõ† [DebugBear - Monitor website performance and Lighthouse scores](https://www.debugbear.com/)\n- üõ† [packtracker.io - Check your webpack bundle size on every pull request.](https://packtracker.io/)\n- üõ† [Exthouse - Analyze the impact of a browser extension on web performance](https://github.com/treosh/exthouse)\n\n### References\n\n- üìπ [The Cost Of JavaScript - YouTube](https://www.youtube.com/watch?v=_bzqF05xsC4) ([text version](https://medium.com/@addyosmani/the-cost-of-javascript-in-2018-7d8950fbb5d4))\n- [AddyOsmani.com - Start Performance Budgeting](https://addyosmani.com/articles/performance-budgets/)\n- üìñ [Get Started With Analyzing Runtime Performance | Google Developers](https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/)\n- üìñ [State of the Web | 2018_01_01](https://httparchive.org/reports/state-of-the-web?start=2018_01_01)\n- üìñ [Page Weight Doesn't Matter](https://www.speedshop.co/2015/11/05/page-weight-doesnt-matter.html)\n- üìñ [Front-End Performance Checklist 2018 \\[PDF, Apple Pages\\]](https://www.smashingmagazine.com/2018/01/front-end-performance-checklist-2018-pdf-pages/)\n- üìñ [Designing for Performance Weighing Aesthetics and Speed - By Lara Callender Hogan \\[eBook, Print\\]](http://designingforperformance.com/index.html)\n- üìñ [Varvy - Web performance glossary](https://varvy.com/performance/)\n- üìñ [fabkrum/web-performance-resources: Up to date collection of valuable web performance resources](https://github.com/fabkrum/web-performance-resources)\n- üìñ [Checkbot - Web Speed Best Practices](https://www.checkbot.io/guide/speed/)\n- üõ† [Progressive Tooling - A list of community-built, third-party tools that can be used to improve page performance](https://progressivetooling.com/)\n\n---\n\n## HTML\n\n- [ ] **Minified HTML:** ![medium] The HTML code is minified, comments, white spaces and new lines are removed from production files.\n\n  _Why:_\n\n  > Removing all unnecessary spaces, comments and attributes will reduce the size of your HTML and speed up your site's page load times and obviously lighten the download for your user.\n\n  _How:_\n\n  > Most of the frameworks have plugins to facilitate the minification of the webpages. You can use a bunch of NPM modules that can do the job for you automatically.\n\n  - üõ† [HTML minifier | Minify Code](http://minifycode.com/html-minifier/)\n  - üõ† [Online HTML Compressor](http://refresh-sf.com)\n  - üìñ [Experimenting with HTML minifier ‚Äî Perfection Kills](http://perfectionkills.com/experimenting-with-html-minifier/#use_short_doctype)\n\n- [ ] **Place CSS tags always before JavaScript tags:** ![high] Ensure that your CSS is always loaded before having JavaScript code.\n\n  ```html\n  <!-- Not recommended -->\n  <script src=\"jquery.js\"></script>\n  <script src=\"foo.js\"></script>\n  <link rel=\"stylesheet\" href=\"foo.css\" />\n\n  <!-- Recommended -->\n  <link rel=\"stylesheet\" href=\"foo.css\" />\n  <script src=\"jquery.js\"></script>\n  <script src=\"foo.js\"></script>\n  ```\n\n  _Why:_\n\n  > Having your CSS tags before any JavaScript enables better, parallel download which speed up browser rendering time.\n\n  _How:_\n\n  > ‚ÅÉ Ensure that `<link>` and `<style>` in your `<head>` are always before your `<script>`.\n\n  - üìñ [Ordering your styles and scripts for pagespeed](https://varvy.com/pagespeed/style-script-order.html)\n\n- [ ] **Minimize the number of iframes:** ![high] Use iframes only if you don't have any other technical possibility. Try to avoid iframes as much as you can.\n\n- [ ] **Pre-load optimization with prefetch, dns-prefetch and prerender:** ![low] Popular browsers can use directive on `<link>` tag and \"rel\" attribute with certain keywords to pre-load specific URLs.\n\n  _Why:_\n\n  > Prefetching allows a browser to silently fetch the necessary resources needed to display content that a user might access in the near future. The browser is able to store these resources in its cache and speed up the way web pages load when they are using different domains for page resources. When a web page has finished loading and the idle time has passed, the browser begins downloading other resources. When a user go in a particular link (already prefetched), the content will be instantly served.\n\n  _How:_\n\n  > ‚ÅÉ Ensure that `<link>` is in your `<head>` section.\n\n  - üìñ [What Is Prefetching and Why Use It](https://www.keycdn.com/support/prefetching)\n  - üìñ [Prefetching, preloading, prebrowsing](https://css-tricks.com/prefetching-preloading-prebrowsing/)\n  - üìñ [What is Preload, Prefetch, and Preconnect](https://www.keycdn.com/articles/resource-hints)\n\n## CSS\n\n- [ ] **Minification:** ![high] All CSS files are minified, comments, white spaces and new lines are removed from production files.\n\n  _Why:_\n\n  > When CSS files are minified, the content is loaded faster and less data is sent to the client. It's important to always minify CSS files in production. It is beneficial for the user as it is for any business who wants to lower bandwidth costs and lower resource usage.\n\n  _How:_\n\n  > ‚ÅÉ Use tools to minify your files automatically before or during your build or your deployment.\n\n  - üõ† [cssnano: A modular minifier based on the PostCSS ecosystem. - cssnano](https://cssnano.co/)\n  - üõ† [@neutrinojs/style-minify - npm](https://www.npmjs.com/package/@neutrinojs/style-minify)\n  - üõ† [Online CSS Compressor](http://refresh-sf.com)\n\n- [ ] **Concatenation:** ![medium] CSS files are concatenated in a single file _(Not always valid for HTTP/2)_.\n\n  ```html\n  <!-- Not recommended -->\n  <link rel=\"stylesheet\" href=\"foo.css\" />\n  <link rel=\"stylesheet\" href=\"bar.css\" />\n\n  <!-- Recommended -->\n  <link rel=\"stylesheet\" href=\"foobar.css\" />\n  ```\n\n  _Why:_\n\n  > If you are still using HTTP/1, you may need to still concatenate your files, it's less true if your server use HTTP/2 (tests should be made).\n\n  _How:_\n\n  > ‚ÅÉ Use online tool or any plugin before or during your build or your deployment to concatenate your files.\n  > ‚ÅÉ Ensure, of course, that concatenation does not break your project.\n\n  - üìñ [HTTP: Optimizing Application Delivery - High Performance Browser Networking (O'Reilly)](https://hpbn.co/optimizing-application-delivery/#optimizing-for-http2)\n  - üìñ [Performance Best Practices in the HTTP/2 Era](https://deliciousbrains.com/performance-best-practices-http2/)\n\n- [ ] **Non-blocking:** ![high] CSS files need to be non-blocking to prevent the DOM from taking time to load.\n\n  ```html\n  <link rel=\"preload\" href=\"global.min.css\" as=\"style\" onload=\"this.rel='stylesheet'\" />\n  <noscript><link rel=\"stylesheet\" href=\"global.min.css\" /></noscript>\n  ```\n\n  _Why:_\n\n  > CSS files can block the page load and delay the rendering of your page. Using `preload` can actually load the CSS files before the browser starts showing the content of the page.\n\n  _How:_\n\n  > ‚ÅÉ You need to add the `rel` attribute with the `preload` value and add `as=\"style\"` on the `<link>` element.\n\n  - üõ† [loadCSS by filament group](https://github.com/filamentgroup/loadCSS)\n  - üìñ [Example of preload CSS using loadCSS](https://gist.github.com/thedaviddias/c24763b82b9991e53928e66a0bafc9bf)\n  - üìñ [Preloading content with rel=\"preload\"](https://developer.mozilla.org/en-US/docs/Web/HTML/Preloading_content)\n  - üìñ [Preload: What Is It Good For? ‚Äî Smashing Magazine](https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/)\n\n- [ ] **Unused CSS:** ![medium] Remove unused CSS selectors.\n\n  _Why:_\n\n  > Removing unused CSS selectors can reduce the size of your files and then speed up the load of your assets.\n\n  _How:_\n\n  > ‚ÅÉ ‚ö†Ô∏è Always check if the framework CSS you want to use don't already has a reset / normalize code included. Sometimes you may not need everything that is inside your reset / normalize file.\n\n  - üõ† [UnCSS Online](https://uncss-online.com/)\n  - üõ† [PurifyCSS](https://github.com/purifycss/purifycss)\n  - üõ† [PurgeCSS](https://github.com/FullHuman/purgecss)\n  - üõ† [Chrome DevTools Coverage](https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage)\n\n- [ ] **CSS Critical:** ![high] The CSS critical (or \"above the fold\") collects all the CSS used to render the visible portion of the page. It is embedded before your principal CSS call and between `<style></style>` in a single line (minified if possible).\n\n      *Why:*\n      > Inlining critical CSS help to speed up the rendering of the web pages reducing the number of requests to the server.\n\n      *How:*\n      > Generate the CSS critical with online tools or using a plugin like the one that Addy Osmani developed.\n\n      * üìñ [Understanding Critical CSS](https://www.smashingmagazine.com/2015/08/understanding-critical-css/)\n      * üõ† [Critical by Addy Osmani on GitHub](https://github.com/addyosmani/critical) automates this.\n      * üìñ [Inlining critical CSS for better web performance | Go Make Things](https://gomakethings.com/inlining-critical-css-for-better-web-performance/)\n       * üõ† [Critical Path CSS Generator - Prioritize above the fold content :: SiteLocity](https://www.sitelocity.com/critical-path-css-generator)\n       * üìñ [Reduce the size of the above-the-fold content](<https://developers.google.com/speed/docs/insights/PrioritizeVisibleContent>)\n\n- [ ] **Embedded or inline CSS:** ![high] Avoid using embed or inline CSS inside your `<body>` _(Not valid for HTTP/2)_\n\n  _Why:_\n\n  > One of the first reason it's because it's a good practice to **separate content from design**. It also helps you have a more maintainable code and keep your site accessible. But regarding performance, it's simply because it decreases the file-size of your HTML pages and the load time.\n\n  _How:_\n\n  > Always use external stylesheets or embed CSS in your `<head>` (and follow the others CSS performance rules)\n\n  - üìñ [Observe CSS Best Practices: Avoid CSS Inline Styles](https://www.lifewire.com/avoid-inline-styles-for-css-3466846)\n\n- [ ] **Analyse stylesheets complexity:** ![high] Analyzing your stylesheets can help you to flag issues, redundancies and duplicate CSS selectors.\n\n  _Why:_\n\n  > Sometimes you may have redundancies or validation errors in your CSS, analysing your CSS files and removed these complexities can help you to speed up your CSS files (because your browser will read them faster)\n\n  _How:_\n\n  > Your CSS should be organized, using a CSS preprocessor can help you with that. Some online tools listed below can also help you analysing and correct your code.\n\n  - üõ† [TestMyCSS | Optimize and Check CSS Performance](http://www.testmycss.com/)\n  - üõ† [CSS Stats](https://cssstats.com/)\n  - üõ† [macbre/analyze-css: CSS selectors complexity and performance analyzer](https://github.com/macbre/analyze-css)\n  - üõ† [Project Wallace](https://www.projectwallace.com/) is like CSS Stats but stores stats over time so you can track your changes\n\n## Fonts\n\n![fonts]\n\n- üìñ [A Book Apart, Webfont Handbook](https://abookapart.com/products/webfont-handbook)\n\n- [ ] **Webfont formats:** ![medium] You are using WOFF2 on your web project or application.\n\n  _Why:_\n\n  > According to Google, the WOFF 2.0 Web Font compression format offers 30% average gain over WOFF 1.0. It's then good to use WOFF 2.0, WOFF 1.0 as a fallback and TTF.\n\n  _How:_\n\n  > Check before buying your new font that the provider gives you the WOFF2 format. If you are using a free font, you can always use Font Squirrel to generate all the formats you need.\n\n  - üìñ [WOFF 2.0 ‚Äì Learn more about the next generation Web Font Format and convert TTF to WOFF2](https://gist.github.com/sergejmueller/cf6b4f2133bcb3e2f64a)\n  - üõ† [Create Your Own @font-face Kits ¬ª Font Squirrel](https://www.fontsquirrel.com/tools/webfont-generator)\n  - üõ† [IcoMoon App - Icon Font, SVG, PDF & PNG Generator](https://icomoon.io/app/)\n  - üìñ [Using @font-face | CSS-Tricks](https://css-tricks.com/snippets/css/using-font-face/?ref=frontendchecklist)\n  - üìñ [Can I use... WOFF2](https://caniuse.com/#feat=woff2)\n\n- [ ] **Use `preconnect` to load your fonts faster:** ![medium]\n\n  ```html\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n  ```\n\n  _Why:_\n\n  > When you arrived on a website, your device needs to find out where your site lives and which server it needs to connect with. Your browser had to contact a DNS server and wait for the lookup complete before fetching the resource (fonts, CSS files...). Prefetches and preconnects allow the browser to lookup the DNS information and start establishing a TCP connection to the server hosting the font file. This provides a performance boost because by the time the browser gets around to parsing the css file with the font information and discovering it needs to request a font file from the server, it will already have pre-resolved the DNS information and have an open connection to the server ready in its connection pool.\n\n  _How:_\n\n  > ‚ÅÉ Before prefetching your webfonts, use webpagetest to evaluate your website\n  > ‚ÅÉ Look for teal colored DNS lookups and note the host that are being requested\n  > ‚ÅÉ Prefetch your webfonts in your `<head>` and add eventually these hostnames that you should prefetch too\n\n  - üìñ [Faster Google Fonts with Preconnect - CDN Planet](https://www.cdnplanet.com/articles/faster-google-webfonts-preconnect/)\n  - üìñ [Make Your Site Faster with Preconnect Hints | Viget](https://www.viget.com/articles/make-your-site-faster-with-preconnect-hints/)\n  - üìñ [Ultimate Guide to Browser Hints: Preload, Prefetch, and Preconnect - MachMetrics Speed Blog](https://www.machmetrics.com/speed-articles/guide-to-browser-hints-preload-preconnect-prefetch/)\n  - üìñ [A Comprehensive Guide to Font Loading Strategies‚Äîzachleat.com](https://www.zachleat.com/web/comprehensive-webfonts/#font-face)\n  - üõ† [typekit/webfontloader: Web Font Loader gives you added control when using linked fonts via @font-face.](https://github.com/typekit/webfontloader)\n\n- [ ] **Webfont size:** ![medium] Webfont sizes don't exceed 300kb (all variants included)\n\n- üìñ [Font Bytes - Page Weight](https://httparchive.org/reports/page-weight#bytesFont)\n\n- [ ] **Prevent Flash or Invisible Text:** ![medium] Avoid transparent text until the Webfont is loaded\n\n- üìñ [`font-display` for the Masses](https://css-tricks.com/font-display-masses/)\n- üìñ [CSS font-display: The Future of Font Rendering on the Web](https://www.sitepoint.com/css-font-display-future-font-rendering-web/)\n\n## Images\n\n- üìñ [Image Bytes in 2018](https://httparchive.org/reports/page-weight#bytesImg)\n\n- [ ] **Images optimization:** ![high] Your images are optimized, compressed without direct impact to the end user.\n\n  _Why:_\n\n  > Optimized images load faster in your browser and consume less data.\n\n  _How:_\n\n  > ‚ÅÉ Try using CSS3 effects when it's possible (instead of a small image)\n  > ‚ÅÉ When it's possible, use fonts instead of text encoded in your images\n  > ‚ÅÉ Use SVG\n  > ‚ÅÉ Use a tool and specify a level compression under 85.\n\n  - üìñ [Image Optimization | Web Fundamentals | Google Developers](https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/image-optimization)\n  - üìñ [Essential Image Optimization - An eBook by Addy Osmani](https://images.guide/)\n  - üõ† [TinyJPG ‚Äì Compress JPEG images intelligently](https://tinyjpg.com/)\n  - üõ† [Kraken.io - Online Image Optimizer](https://kraken.io/web-interface)\n  - üõ† [Compressor.io - optimize and compress JPEG photos and PNG images](https://compressor.io/compress)\n  - üõ† [Cloudinary - Image Analysis Tool](https://webspeedtest.cloudinary.com)\n  - üõ† [ImageEngine - Image Webpage Loading Test](https://demo.imgeng.in)\n  - üõ† [SVGOMG - Optimize SVG vector graphics files](https://jakearchibald.github.io/svgomg/)\n\n- [ ] **Images format:** ![high] Choose your image format appropriately.\n\n  _Why:_\n\n  > To ensure that your images don't slow your website, choose the format that will correspond to your image. If it's a photo, JPEG is most of the time more appropriate than PNG or GIF. But don't forget to look a the nex-gen formats which can reduce the size of your files. Each image format has pros and cons, it's important to know these to make the best choice possible.\n\n  _How:_\n\n  > ‚ÅÉ Use [Lighthouse](https://developers.google.com/web/tools/lighthouse/) to identify which images can eventually use **next-gen formats** (like JPEG 2000m JPEG XR or WebP)\n  > ‚ÅÉ Compare different formats, sometimes using PNG8 is better than PNG16, sometimes it's not.\n\n  - üìñ [Serve Images in Next-Gen Formats | Tools for Web Developers | Google Developers](https://developers.google.com/web/tools/lighthouse/audits/webp)\n  - üìñ [What Is the Right Image Format for Your Website? ‚Äî SitePoint](https://www.sitepoint.com/what-is-the-right-image-format-for-your-website/)\n  - üìñ [PNG8 - The Clear Winner ‚Äî SitePoint](https://www.sitepoint.com/png8-the-clear-winner/)\n  - üìñ [8-bit vs 16-bit - What Color Depth You Should Use And Why It Matters - DIY Photography](https://www.diyphotography.net/8-bit-vs-16-bit-color-depth-use-matters/)\n\n- [ ] **Use vector image vs raster/bitmap:** ![medium] Prefer using vector image rather than bitmap images (when possible).\n\n  _Why:_\n\n  > Vector images (SVG) tend to be smaller than images and SVG's are responsive and scale perfectly. These images can be animated and modified by CSS.\n\n- [ ] **Images dimensions:** ![medium] Set `width` and `height` attributes on `<img>` if the final rendered image size is known.\n\n  _Why:_\n\n  > If height and width are set, the space required for the image is reserved when the page is loaded. However, without these attributes, the browser does not know the size of the image, and cannot reserve the appropriate space to it. The effect will be that the page layout will change during loading (while the images load).\n\n- [ ] **Avoid using Base64 images:** ![medium] You could eventually convert tiny images to base64 but it's actually not the best practice.\n\n  - üìñ [Base64 Encoding & Performance, Part 1 and 2 by Harry Roberts](https://csswizardry.com/2017/02/base64-encoding-and-performance/)\n  - üìñ [A closer look at Base64 image performance ‚Äì The Page Not Found Blog](http://www.andygup.net/a-closer-look-at-base64-image-performance/)\n  - üìñ [When to base64 encode images (and when not to) | David Calhoun](https://www.davidbcalhoun.com/2011/when-to-base64-encode-images-and-when-not-to/)\n  - üìñ [Base64 encoding images for faster pages | Performance and seo factors](https://varvy.com/pagespeed/base64-images.html)\n\n- [ ] **Lazy loading:** ![medium] Offscreen images are loaded lazily (A noscript fallback is always provided).\n\n  _Why:_\n\n  > It will improve the response time of the current page and then avoid loading unnecessary images that the user may not need.\n\n  _How:_\n\n  > ‚ÅÉ Use [Lighthouse](https://developers.google.com/web/tools/lighthouse/) to identify how many **images are offscreen**.\n  > ‚ÅÉ Use a JavaScript plugin like the following to lazyload your images. Make sure you target offscreen images only.\n  > ‚ÅÉ Also make sure to lazyload alternative images shown at mouseover or upon other user actions.\n\n  - üõ† [verlok/lazyload: GitHub](https://github.com/verlok/lazyload)\n  - üõ† [aFarkas/lazysizes: GitHub](https://github.com/aFarkas/lazysizes/)\n  - üõ† [mfranzke/loading-attribute-polyfill: GitHub](https://github.com/mfranzke/loading-attribute-polyfill/)\n  - üìñ [Lazy Loading Images and Video | Web Fundamentals | Google Developers](https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video/)\n  - üìñ [5 Brilliant Ways to Lazy Load Images For Faster Page Loads - Dynamic Drive Blog](http://articles.dynamicdrive.com/5-brilliant-ways-to-lazy-load-images-for-faster-page-loads/)\n\n- [ ] **Responsive images:** ![medium] Ensure to serve images that are close to your display size.\n\n  _Why:_\n\n  > Small devices don't need images bigger than their viewport. It's recommended to have multiple versions of one image on different sizes.\n\n  _How:_\n\n  > ‚ÅÉ Create different image sizes for the devices you want to target.\n  > ‚ÅÉ Use `srcset` and `picture` to deliver multiple variants of each image.\n\n  - üìñ [Responsive images - Learn web development | MDN](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images)\n\n## JavaScript\n\n- [ ] **JS Minification:** ![high] All JavaScript files are minified, comments, white spaces and new lines are removed from production files _(still valid if using HTTP/2)_.\n\n  _Why:_\n\n  > Removing all unnecessary spaces, comments and break will reduce the size of your JavaScript files and speed up your site's page load times and obviously lighten the download for your user.\n\n  _How:_\n\n  > ‚ÅÉ Use the tools suggested below to minify your files automatically before or during your build or your deployment.\n\n  - üõ† [uglify-js - npm](https://www.npmjs.com/package/uglify-js)\n  - üõ† [Online JavaScript Compressor](http://refresh-sf.com)\n  - üìñ [Short read: How is HTTP/2 different? Should we still minify and concatenate?](https://scaleyourcode.com/articles/article/28)\n\n- [ ] **No JavaScript inside:** ![medium] _(Only valid for website)_ Avoid having multiple JavaScript codes embedded in the middle of your body. Regroup your JavaScript code inside external files or eventually in the `<head>` or at the end of your page (before `</body>`).\n\n  _Why:_\n\n  > Placing JavaScript embedded code directly in your `<body>` can slow down your page because it loads while the DOM is being built. The best option is to use external files with `async` or `defer` to avoid blocking the DOM. Another option is to place some scripts inside your `<head>`. Most of the time analytics code or small script that need to load before the DOM gets to main processing.\n\n  _How:_\n\n  > Ensure that all your files are loaded using `async` or `defer` and decide wisely the code that you will need to inject in your `<head>`.\n\n  - üìñ [11 Tips to Optimize JavaScript and Improve Website Loading Speeds](https://www.upwork.com/hiring/development/11-tips-to-optimize-javascript-and-improve-website-loading-speeds/)\n\n- [ ] **Non-blocking JavaScript:** ![high] JavaScript files are loaded asynchronously using `async` or deferred using `defer` attribute.\n\n  ```html\n  <!-- Defer Attribute -->\n  <script defer src=\"foo.js\"></script>\n\n  <!-- Async Attribute -->\n  <script async src=\"foo.js\"></script>\n  ```\n\n  _Why:_\n\n  > JavaScript blocks the normal parsing of the HTML document, so when the parser reaches a `<script>` tag (particularly is inside the `<head>`), it stops to fetch and run it. Adding `async` or `defer` are highly recommended if your scripts are placed in the top of your page but less valuable if just before your `</body>` tag. But it's a good practice to always use these attributes to avoid any performance issue.\n\n  _How:_\n\n  > ‚ÅÉ Add `async` (if the script don't rely on other scripts) or `defer` (if the script relies upon or relied upon by an async script) as an attribute to your script tag.\n  > ‚ÅÉ If you have small scripts, maybe use inline script place above async scripts.\n\n  - üìñ [Remove Render-Blocking JavaScript](https://developers.google.com/speed/docs/insights/BlockingJS)\n  - üìñ [Defer loading JavaScript](https://varvy.com/pagespeed/defer-loading-javascript.html)\n\n- [ ] **Optimized and updated JS libraries:** ![medium] All JavaScript libraries used in your project are necessary (prefer Vanilla JavaScript for simple functionalities), updated to their latest version and don't overwhelm your JavaScript with unnecessary methods.\n\n  _Why:_\n\n  > Most of the time, new versions come with optimization and security fix. You should use the most optimized code to speed up your project and ensure that you'll not slow down your website or app without outdated plugin.\n\n  _How:_\n\n  > If your project use NPM packages, [npm-check](https://www.npmjs.com/package/npm-check) is a pretty interesting library to upgrade / update your libraries.\n  > [Greenkeeper](https://greenkeeper.io/) can automatically look for your dependencies and suggest an update every time a new version is out.\n\n  - üìñ [You may not need jQuery](http://youmightnotneedjquery.com/)\n  - üìñ [Vanilla JavaScript for building powerful web applications](https://plainjs.com/)\n\n- [ ] **Check dependencies size limit:** ![low] Ensure to use wisely external libraries, most of the time, you can use a lighter library for a same functionality.\n\n  _Why:_\n\n  > You may be tempted to use one of the 745 000 packages you can find on [npm](https://www.npmjs.com/), but you need to choose the best package for your needs. For example, MomentJS is an awesome library but with a lot of methods you may never use, that's why Day.js was created. It's just 2kB vs 16.4kB gz for Moment.\n\n  _How:_\n\n  > Always compare and choose the best and lighter library for your needs. You can also use tools like [npm trends](http://www.npmtrends.com/) to compare NPM package downloads counts or [Bundlephobia](https://bundlephobia.com/) to know the size of your dependencies.\n\n  - üõ† [ai/size-limit: Prevent JS libraries bloat. If you accidentally add a massive dependency, Size Limit will throw an error.](https://github.com/ai/size-limit)\n  - üõ† [webpack-bundle-analyzer - npm](https://www.npmjs.com/package/webpack-bundle-analyzer)\n  - üõ† [js-dependency-viewer - npm](https://www.npmjs.com/package/js-dependency-viewer)\n  - üìñ [Size Limit: Make the Web lighter ‚Äî Martian Chronicles, Evil Martians‚Äô team articles](https://evilmartians.com/chronicles/size-limit-make-the-web-lighter)\n\n- [ ] **JavaScript Profiling:** ![medium] Check for performance problems in your JavaScript files (and CSS too).\n\n  _Why:_\n\n  > JavaScript complexity can slow down runtime performance. Identifying these possible issues are essential to offer the smoothest user experience.\n\n  _How:_\n\n  > Use the Timeline tool in the Chrome Developer Tool to evaluate scripts events and found the one that may take too much time.\n\n  - üìñ [Speed Up JavaScript Execution | Tools for Web Developers | Google Developers](https://developers.google.com/web/tools/chrome-devtools/rendering-tools/js-execution)\n  - üìñ [JavaScript Profiling With The Chrome Developer Tools ‚Äî Smashing Magazine](https://www.smashingmagazine.com/2012/06/javascript-profiling-chrome-developer-tools/)\n  - üìñ [How to Record Heap Snapshots | Tools for Web Developers | Google Developers](https://developers.google.com/web/tools/chrome-devtools/memory-problems/heap-snapshots)\n  - üìñ [Chapter 22 - Profiling the Frontend - Blackfire](https://blackfire.io/docs/book/22-frontend-profiling)\n  - üìñ [30 Tips To Improve Javascript Performance](http://www.monitis.com/articles/30-tips-to-improve-javascript-performance/)\n\n- [ ] **Use of Service Workers:** ![medium] You are using Service Workers in your PWA to cache data or execute possible heavy tasks without impacting the user experience of your application.\n\n  - üìñ [Service Workers: an Introduction | Web Fundamentals | Google Developers](https://developers.google.com/web/fundamentals/primers/service-workers/)\n  - üìñ [Measuring the Real-world Performance Impact of Service Workers | Web | Google Developers](https://developers.google.com/web/showcase/2016/service-worker-perf)\n  - üìñ [What Are Service Workers and How They Help Improve Performance](https://www.keycdn.com/articles/service-workers/)\n  - üìπ [How does a service worker work? - YouTube](https://www.youtube.com/watch?v=__xAtWgfzvc)\n\n## Server\n\n- [ ] **Your website is using HTTPS&#x3A;** ![high]\n\n  _Why:_\n\n  > HTTPS is not only for ecommerce websites, but for all websites that are exchanging data. Data shared by a user or data shared to an external entity. Modern browsers today limit functionalities for sites that are not secure. For example: geolocation, push notifications and service workers don't work if your instance is not using HTTPS. And today is much more easy to setup a project with an SSL certificate than it was before (and for free, thanks to [Let's Encrypt](https://letsencrypt.org/)).\n\n- üìñ [Why Use HTTPS? | Cloudflare](https://www.cloudflare.com/learning/security/why-use-https/)\n- üìñ [Enabling HTTPS Without Sacrificing Your Web Performance - Moz](https://moz.com/articles/enabling-https-without-sacrificing-web-performance)\n- üìñ [How HTTPS Affects Website Performance](https://wp-rocket.me/articles/https-affects-website-performance/)\n- üìñ [HTTP versus HTTPS versus HTTP2 - The real story | Tune The Web](https://www.tunetheweb.com/articles/http-versus-https-versus-http2/)\n- üìñ [HTTP vs HTTPS ‚Äî Test them both yourself](https://www.httpvshttps.com/)\n\n- [ ] **Page weight &lt; 1500 KB (ideally &lt; 500 KB):** ![high] Reduce the size of your page + resources as much as you can.\n\n  _Why:_\n\n  > Ideally you should try to target &lt; 500 KB but the state of web shows that the median of Kilobytes is around 1500 KB (even on mobile). Depending on your target users, network connection, devices, it's important to reduce as much as possible your total Kilobytes to have the best user experience possible.\n\n  _How:_\n\n  > ‚ÅÉ All the rules inside the Front-End Performance Checklist will help you to reduce as much as possible your resources and your code.\n\n  - üìñ [Page Weight](https://httparchive.org/reports/page-weight#bytesTotal)\n  - üõ† [What Does My Site Cost?](https://whatdoesmysitecost.com/)\n  - üõ† [web - Measure full page size in Chrome DevTools - Stack Overflow](https://stackoverflow.com/questions/38239980/measure-full-page-size-in-chrome-devtools)\n\n- [ ] **Page load times &lt; 3 seconds:** ![high] Reduce as much as possible your page load times to quickly deliver your content to your users.\n\n  _Why:_\n\n  > Faster your website or app is, less you have probability of bounce increases, in other terms you have less chances to lose your user or future client. Enough researches on the subject prove that point.\n\n  _How:_\n\n  > Use online tools like [Page Speed Insight](https://developers.google.com/speed/pagespeed/insights/) or [WebPageTest](https://www.webpagetest.org/) to analyze what could be slowing you down and use the Front-End Performance Checklist to improve your load times.\n\n  - üõ† [Compare your mobile site speed](https://www.thinkwithgoogle.com/feature/mobile/)\n  - üõ† [Test Your Mobile Website Speed and Performance - Think With Google](https://testmysite.thinkwithgoogle.com/intl/en-us)\n  - üìñ [Average Page Load Times for 2018 - How does yours compare? - MachMetrics Speed Blog](https://www.machmetrics.com/speed-articles/average-page-load-times-websites-2018/)\n\n- [ ] **Time To First Byte &lt; 1.3 seconds:** ![high] Reduce as much as you can the time your browser waits before receiving data.\n\n  - üìñ [What is Waiting (TTFB) in DevTools, and what to do about it](https://scaleyourcode.com/articles/article/27)\n  - üìñ [Monitoring your servers with free tools is easy](https://scaleyourcode.com/articles/article/7)\n  - üìñ [Time to First Byte (TTFB)](https://varvy.com/pagespeed/ttfb.html)\n  - üõ† [Global latency testing tool](https://latency.apex.sh)\n\n- [ ] **Cookie size:** ![medium] If you are using cookies, be sure each cookie doesn't exceed 4096 bytes and your domain name doesn't have more than 20 cookies.\n\n  _Why:_\n\n  > Cookies are exchanged in the HTTP headers between web servers and browsers. It's important to keep the size of cookies as low as possible to minimize the impact on the user's response time.\n\n  _How:_\n\n  > Eliminate unnecessary cookies.\n\n  - üìñ [Cookie specification: RFC 6265](https://tools.ietf.org/html/rfc6265)\n  - üìñ [Cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies)\n  - üõ† [Browser Cookie Limits](http://browsercookielimits.squawky.net/)\n  - üìñ [Website Performance: Cookies Don't Taste So Good - Monitis Blog](http://www.monitis.com/articles/website-performance-cookies-dont-taste-so-good/)\n  - üìñ [Google's Web Performance Best Practices #3: Minimize Request Overhead - GlobalDots Blog](https://www.globaldots.com/googles-web-performance-best-practices-3-minimize-request-overhead/)\n\n- [ ] **Minimizing HTTP requests:** ![high] Always ensure that every file requested are essential for your website or application.\n\n- üìñ [Combine external CSS](https://varvy.com/pagespeed/combine-external-css.html)\n- üìñ [Combine external JavaScript](https://varvy.com/pagespeed/combine-external-javascript.html)\n\n- [ ] **Use a CDN to deliver your assets:** ![medium] Use a CDN to deliver faster your content over the world.\n\n- üìñ [10 Tips to Optimize CDN Performance - CDN Planet](https://www.cdnplanet.com/articles/10-tips-optimize-cdn-performance/)\n- üìñ [HTTP Caching | Web Fundamentals | Google Developers](https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching)\n\n- [ ] **Serve files from the same protocol:** ![high] Avoid having your website serving files coming from source using HTTP on your website which is using HTTPS for example. If your website is using HTTPS, external files should come from the same protocol.\n\n- [ ] **Serve reachable files:** ![high] Avoid requesting unreachable files (404).\n\n- üìñ [How to avoid bad requests](https://varvy.com/pagespeed/avoid-bad-requests.html)\n\n- [ ] **Set HTTP cache headers properly:** ![high] Set HTTP headers to avoid expensive number of roundtrips between your browser and the server.\n\n- üìñ [Using cache-control for browser caching](https://varvy.com/pagespeed/cache-control.html)\n\n- [ ] **GZIP / Brotli compression is enabled:** ![high] Use a compression method such as Gzip or Brotli to reduce the size of your JavaScript files. With a smaller sizes file, users will be able to download the asset faster, resulting in improved performance.\n\n- üõ† [Check GZIP compression](https://checkgzipcompression.com/)\n- üõ† [Check Brotli Compression](https://tools.keycdn.com/brotli-test)\n- üìñ [Can I use... Brotli](https://caniuse.com/#feat=brotli)\n\n---\n\n## Performances and JS Frameworks\n\n### Angular\n\n- üìñ [Angular Performance Checklist](https://github.com/mgechev/angular-performance-checklist)\n\n### React\n\n- üìñ [Optimizing Performance - React](https://reactjs.org/docs/optimizing-performance.html)\n- üìñ [React image manipulation | Cloudinary](https://cloudinary.com/documentation/react_image_manipulation)\n- üìñ [Debugging React performance with React 16 and Chrome Devtools.](https://building.calibreapp.com/debugging-react-performance-with-react-16-and-chrome-devtools-c90698a522ad)\n- üìñ [Build Performant - React](https://web.dev/react/)\n\n### Vue\n\n- üìñ [Vue - Useful Links|Style Guide and Performance](https://learn-vuejs.github.io/vue-patterns/useful-links/)\n\n## Performances and CMS\n\n### WordPress\n\n- üõ† [Test Your Website Speed | WordPress Hosting by @WPEngine](https://wpengine.com/speed-tool/)\n\n#### Articles\n\n- üìñ [19 Tips to Speed Up WordPress Performance (Updated)](https://www.wpbeginner.com/wordpress-performance-speed/)\n- üìñ [Speed Up Your WordPress - How to Save Images Optimized for Web](https://www.wpbeginner.com/beginners-guide/speed-wordpress-save-images-optimized-web/)\n\n#### Plugins recommended\n\n- üõ† [Caching Plugin for WordPress - Speed up your website with WP Rocket](https://wp-rocket.me/)\n- üõ† [WP-Sweep | WordPress.org](https://wordpress.org/plugins/wp-sweep/)\n- üõ† [Imagify Image Optimizer | WordPress.org](https://wordpress.org/plugins/imagify/)\n\n---\n\n## Translations\n\nThe Front-End Performance Checklist wants to also be available in other languages! Don't hesitate to submit your contribution!\n\n- üáµüáπ Portuguese: [fernandofawkes/Front-End-Performance-Checklist](https://github.com/fernandofawkes/Front-End-Performance-Checklist)\n- üá®üá≥ Chinese: [JohnsenZhou/Front-End-Performance-Checklist](https://github.com/JohnsenZhou/Front-End-Performance-Checklist)\n- üá∑üá∫ Russian: [lex111/Front-End-Performance-Checklist](https://github.com/lex111/Front-End-Performance-Checklist)\n- üá´üá∑ French: [WilliamDASILVA/Front-End-Performance-Checklist](https://github.com/WilliamDASILVA/Front-End-Performance-Checklist)\n- üá∞üá∑ Korean: [ParkSB/Front-End-Performance-Checklist](https://github.com/ParkSB/Front-End-Performance-Checklist)\n- üá™üá∏ Spanish: [dagerzuga/Front-End-Performance-Checklist](https://github.com/dagerzuga/Front-End-Performance-Checklist)\n- üáªüáÆ Vietnamese : [huynhan147/Front-End-Performance-Checklist](https://github.com/huynhan147/FrontEnd-Performance-Checklist)\n- üáØüáµ Japanese: [GameWith/Front-End-Performance-Checklist](https://github.com/GameWith/Front-End-Performance-Checklist)\n- üáµüá± Polish: [mbiesiad/Front-End-Performance-Checklist](https://github.com/mbiesiad/Front-End-Performance-Checklist)\n",
            "url": "https://thedaviddias.dev/articles/front-end-performance-checklist-speeds-up-web-developments",
            "title": "The Front-End Performance Checklist speeds up your web developments",
            "summary": "An exhaustive list of all the elements that will speed up your current web developments and offer the best user experience.",
            "date_modified": "2018-07-22T00:01:00.000Z",
            "author": {
                "name": "David Dias",
                "url": "https://twitter.com/thedaviddias"
            }
        },
        {
            "id": "https://thedaviddias.dev/articles/learned-presenting-side-project-europe",
            "content_html": "\nIn October 2017, I launched my [first open-source project on Github](https://medium.freecodecamp.org/how-my-first-project-won-6000-stars-on-github-in-5-days-6340ec99829e): the Front-End Checklist. In few hours, the project gained international visibility. After that, for a number of weeks, I had an incredible journey with many people around the world. I recently started giving talks in local communities around [Spain](https://en.wikipedia.org/wiki/Spain) and [Portugal](https://en.wikipedia.org/wiki/Portugal) about the project, and I plan to check out [France](https://en.wikipedia.org/wiki/France) later on.\n\nDoing these presentations gave me a different perspective and vision about the worldwide communities who organize meetups regularly. I discovered that there were an huge number of people who were looking for more and more content and wanted to participate in local communities.\n\nAfter initiating the [Front-End Dev Mauritius community](https://www.facebook.com/groups/frontenddevmauritius), I know how complicated it can be to find people willing to share their experiences about Front-End Development. And for some, such as those who recently have moved from another city or country, having a welcoming tech community is important to getting setting up.\nI wanted to share with you some of the things I learned before, during, and after these meetups I participated in throughout Europe. And I want to encourage you to **participate more in local events no matter where you are today**.\n\n## Don‚Äôt give up!\n\n![Map showing Spain and Portugal and a line linking Barcelona to Madrid and Porto](/images/articles/learned-presenting-side-project-europe/map-front-end-checklist-conference.png 'Barcelona, Madrid and Porto')\n\nKnowing that I would be on \"holidays\" for a few weeks in France, Spain, and Portugal I decided to try contacting local groups in **Barcelona, Madrid, Lisbon, Aveiro, and Porto**. I sent messages directly to the founders of local groups using [Meetup.com](https://www.meetup.com/), or contacted them via Twitter when they had specified their account on their profile. But, as I was expecting, I didn‚Äôt receive a lot of replies at first.\n\nIn **Barcelona** however, Bettina from [Ignit](https://itnig.net/), who managed the ‚Äú_[Barcelona Front-End Development Meetup](https://www.meetup.com/fr-FR/Barcelona-Front-End-Development-Meetup/)_‚Äù, answered me really quickly. We decided, after some email exchanges and a phone call, to have a meetup on 14 March about my project.\n\nIn **Madrid**, the ‚ÄúFront-end Developers Madrid‚Äù organizers never answered me. But Juan Macias, a teacher‚Äôs assistant at ‚ÄúIronhack Madrid,‚Äù did everything to help me setup a talk, which I gave on 16 March.\n\nIn **Lisbon**, Shannon Graybill from ‚ÄúLisbon Le Wagon‚Äù showed a lot of interest in having me do a presentation. But we lost touch after we tried to call each other few times without setting a time. Besides, I decided not to present in Lisboa, but instead tried to do something in Porto (easier for me, as I was in Aveiro for two weeks).\nThen in Porto I contacted Ricardo Mendes, who usually organizes ‚ÄúPorto Codes‚Äù. After few messages and emails, we decide to organize a talk on 5 April at Porto.io, at a coworking space in the middle of the city.\n\n![Event page on the Porto Codes Meetup page](/images/articles/learned-presenting-side-project-europe/meetup-front-end-checklist-madrid.jpeg)\n\n## Know your audience\n\nOne of the first rules I learned about giving a talk or a presentation was to ‚Äúknow your audience.‚Äù That is maybe the most challenging but nonetheless important rule you need to have in mind.\nA few days before each talk, I went through all the profiles on Meetup, trying to know my future audience better. Unfortunately, most of the people don‚Äôt put their Twitter or Facebook account in their profiles. They don‚Äôt often answer some basic questions sent by the owner of the group when they subscribe, which makes it really hard for a speaker learn about the target audience of a meetup.\nI sent a tweet to some people before the meetup in Barcelona, but I didn‚Äôt receive any responses. Next time üòâ.\n\n<Tweet url=\"https://twitter.com/TheDavidDias/status/972860228457975808\" />\n\nSince I didn‚Äôt know my audience in advance, I then decided to ask about each person‚Äôs career just before I started my talk. I adapted my content and discourse depending on their responses and it seemed that my slides were understandable by any level.\n\n## Check for other local events\n\nI‚Äôm not a fan of football (although my father is) ‚Äî I never felt passionate about it. But that was something that would‚Äôve been useful to think about before setting the Barcelona meetup‚Äôs date. Twenty-three peopole planned to come, but just‚Ä¶2 of them came. I discovered afterwards that ‚ÄúBarcelona ‚Äî Chelsea‚Äù was probably one of the reasons why people didn‚Äôt come.\nFor me, it was an awesome time. I was able to focus more on specific questions asked by Jimmy from Los Angeles and Costa Rica and Marcela from Mexico (I also won‚Äôt forget the delicious pizza we ate after the meetup at Anauco).\n\n## Print your username on a tee-shirt\n\n![David Dias standing up and presenting near a video projector and MacBook. He is wearing a white tee-shirt with his username @thedaviddias printed in black.](/images/articles/learned-presenting-side-project-europe/iron-hack-david-dias-spain.jpeg 'Ironhack in Madrid (Spain)')\n\nThat might sound crazy, but printing my username on a tee-shirt was one of the things I‚Äôm happy I did. Some people may ask you how to contact you or may be too shy to do so. But with your username ‚Äúon you,‚Äù it‚Äôs impossible not to find you on Internet (or forget who you are üòÖ)!\n\n<Tweet url=\"https://twitter.com/itnig/status/973996442636472320\" />\n\n<Tweet url=\"https://twitter.com/SoyJuanMacias/status/974736513266339840\" />\n\n<Tweet url=\"https://twitter.com/locks/status/981961050827390982\" />\n\n## Tell stories and share what motivates you\n\nTelling stories is not that hard.\nLots of talks I‚Äôve heard in the past, from different people, seemed ‚Äúempty,‚Äù without any soul. Doing a talk is much more for me than a simple exposition of facts or numbers or code. It‚Äôs about a story, how someone found a way to develop their application, how some new technologies can improve the way we work in our daily lives, and so on.\nIn my case, it was how a ‚Äúsimple‚Äù checklist changed the way I see the Front-End worldwide community, and the way that some people will work in the future.\n\n## Don‚Äôt need to be the best\n\n![David Dias standing front of a slide showing a list of JS task runners (Grunt, Gulp, Webpack...)](/images/articles/learned-presenting-side-project-europe/talking-about-task-runners.jpeg 'Talking about task runners at Ironhack Madrid')\n\nThat is maybe one of the biggest lesson I wanted to share with you in this post: you don‚Äôt need to be the best or the expert to share what you know or what you‚Äôve learned before.\nLot of beginners with less than a couple years of experience don‚Äôt feel confident sharing what they know with others, because they think they don‚Äôt know enough.\nFrom my point of view, that‚Äôs the wrong belief. Whether you have experience or not, you always have something useful that can be shared with others. It‚Äôs as simple as that. And it‚Äôs something some people need to start believing once and for all.\n\n## Take photos before everyone leaves!\n\nIf your audience is used to sharing photos on Twitter or other social media, you‚Äôre lucky ‚Äî you‚Äôll have some photos of you to help you remember your talk or show the presentation you did. They might even come in handy if you want to write an article about it üòÖ.\nBut taking a group photo with all your attendees is a fun thing to plan before everyone runs out of the meetup. I failed on that point many times, and I was only able to take a picture in Porto with the two organisers, including Tim Lai.\n\n<Tweet url=\"https://twitter.com/TheDavidDias/status/982013829969301505\" />\n\nA photo took after most of the attendees already went home.\n\n## Ask for feedbacks\n\nThis is another thing I missed, but I now know how useful it could‚Äôve been. Having feedback on any work or talk can be really helpful when we try to improve ourselves and the way we present things.\nIn my next meetups, I‚Äôll probably give attendees a [bit.ly](https://bitly.com/) link redirecting to a [Typeform quizz](https://www.typeform.com/) which I‚Äôll ask them to fill out.\n\nAnd in case you didn‚Äôt read my article about how everything began, take a look at it here.\nPutting it all together\nGiving these talks in different cities and countries helped me learn how much can be shared and taught to an incredible number of people. During these last few years, while learning and sharing my vision of Front-End development, I wasn‚Äôt able to see how large the community of people wanting to become better actually was.\nWe can start with something really small, and that small thing can give us the opportunity to meet people and give them something they needed or were searching for.\n\nNow, let‚Äôs recap each point I went through:\n\n- Even if local communities don‚Äôt always send you a response, **don‚Äôt give up**!\n- Always **check for other local events** when you decide on a date for a meetup\n- Try to **know your audience** before, or prepare your talk to be accessible for anyone\n- Printing **your username on a tee-shirt** can be helpful\n- Remember to **tell stories** and to **show your motivation**\n- You **don‚Äôt need to be the best** to share something with someone else\n- Don‚Äôt forget to **take photos** before everyone leaves\n- **Ask for feedback** to improve your next talk\n\n## Thank you for reading!\n\nThat‚Äôs it. In case you like my article and find it useful, here are some things you can do to show your support:\n\n- Give a star ‚≠êÔ∏è on GitHub: https://github.com/thedaviddias/Front-End-Checklist (It‚Äôs important for me to continue launching other open-source projects)\n- Follow me on GitHub: https://github.com/thedaviddias\n- Follow me on Twitter: https://twitter.com/thedaviddias\n",
            "url": "https://thedaviddias.dev/articles/learned-presenting-side-project-europe",
            "title": "What I learned after presenting my side project in Europe",
            "summary": "An overview of what I learned presenting the Front-End Checklist during my vacations in Europe",
            "date_modified": "2018-05-22T00:00:00.000Z",
            "author": {
                "name": "David Dias",
                "url": "https://twitter.com/thedaviddias"
            }
        },
        {
            "id": "https://thedaviddias.dev/articles/choose-city-country-front-developer",
            "content_html": "\nAfter I‚Äôve been invited by [my previous company](https://www.facebook.com/Proximity-BBDO-Indian-Ocean-378454594936/) to move to Mauritius to manage a Front-End Developer‚Äôs team, I‚Äôm now looking forward to choose where I want to move next. I‚Äôve been working for many years in Paris, but going back to France, like some of my compatriotes I know, is not an option for me.\n\n![](/images/articles/choose-city-country-front-developer/earth-rounded.jpeg)\n\nWhen you start living outside your native country, creating worldwide links with others, you know that you can‚Äôt just ‚Äúgo back‚Äù. You can‚Äôt live ignoring the fact that being out of your comfort zone is the best thing that you can experience in life, more challenging when you live abroad. I spent 3 years in Brazil and these last two years in Mauritius. Thus I know that everything I learned from people around, I couldn‚Äôt learn if I was living in France.\n\n**But today I‚Äôm facing a dilemma**. I‚Äôm not sure which country / city I should to focus on my job researches. I need your help to decide where could be my next move‚Ä¶\n\n<Tweet url=\"https://twitter.com/TheDavidDias/status/945986396375810049\" />\n\n## 1. Toronto / Canada\n\n![](/images/articles/choose-city-country-front-developer/toront-cn-tower.jpeg 'Toronto and its CN Tower')\n\nCanada was is on 12th position of the Top Expat Destinations in 2016, 16th in 2017 according to ‚Äú[Expat Insider](https://www.internations.org/expat-insider/)‚Äù. With more than 35 000 000 habitants split on around 9 000 000 km2, Canada is worldwide known to be a [multicultural nation](https://en.wikipedia.org/wiki/Multiculturalism_in_Canada) and with sometimes [long and cold winters](http://www.huffingtonpost.ca/2017/12/27/cold-weather-wave-is-lasting-longer-than-usual-environment-canada_a_23318174/).\n\nI went to Canada in October 2014, to visit Toronto and Montreal. I really loved it! Most of the people prefer Montreal, but in my case, I enjoyed more staying in Toronto. I have few friends who moved there so they will be able to give me some advices if I need some. Since 2015, I have been registered in the pool for the [IEC Working Holidays visa](http://www.cic.gc.ca/english/work/iec/eligibility.asp). Unfortunately, until today, I hadn‚Äôt any luck‚Ä¶ But I still have hope üå§\n\nThe [International Mobility Program for Francophones](https://www.canadavisa.com/mobilite-francophone.html) could be also an option for me. And to apply for the [Express Entry](http://www.cic.gc.ca/english/immigrate/skilled/crs-tool.asp), I just need to pass my [IELTS exam}(https://www.ielts.org/) (on January the 20th) and have enough point to apply for.\n\nThe website [Numbeo](https://www.numbeo.com/) helps to compare the cost of living of different cities in the world. It seems that the cost of living in Toronto is less than most of the cities I‚Äôm interested in although these datas are not 100% reliable.\n\n![](/images/articles/choose-city-country-front-developer/cost-living-montreal-toronto.png 'Montreal and Toronto seems to be cheaper than all other cities I‚Äôm mentioning in this article.')\n\n## 2. Sydney or Melbourne / Australia\n\n![](/images/articles/choose-city-country-front-developer/sydney-view.jpeg)\n\nThe kangorou‚Äôs country was on 7th position in the Top 10 of best countries Expat Insider 2016 and is now on 34th position in 2017.\n\nI never went to Australia, but all my friend who went there, tell me good things about it. The immigration process does not seems easy and because I am +30 years, I can‚Äôt apply for the [Working Holidays Visa](https://www.homeaffairs.gov.au/Trav/Visa-1/417-). I‚Äôm still waiting from the French government to expand the upper age of eligibility from [30 to 35 years old](https://www.quora.com/When-does-the-Australian-working-holiday-visa-age-increase).\n\nAccording to Numbeo, Sydney has a cost of living a little higher than Melbourne.\n\n![](/images/articles/choose-city-country-front-developer/cost-living-sydney-melbourne.png)\n\n## 3. Wellington or Auckland / New Zealand\n\n[New Zealand](https://en.wikipedia.org/wiki/New_Zealand) was on 5th position for the Top 10 best countries by Expat Insider in 2016 and 6th for 2017.\n\nI don‚Äôt know why but I was always fascinated by that country. I read a lot of articles about the pros and cons, comments of people who complain about things which are better handled elsewhere. But let me tell you something, I learned one thing since I had lived in different countries. You can have an opinion about everything around, but you should learn to live with that. It doesn‚Äôt mean you need to accept everything, but you can‚Äôt be happy in a place where you are always criticising.\n\nComparing two places, in the same country or in different country is in general a mistake you do in the first country you live‚Ä¶ But the more you move, the more you‚Äôll learn of how to enjoy where you are and skip details.\n\nThe city of Auckland was the first to answer to my tweet asking about ‚ÄúWhere I need to move‚Äù.\n\n<Tweet url=\"https://twitter.com/Auckland_NZ/status/945593377889779713\" />\n\nWellington followed the next day with two adorable tweets:\n\n<Tweet url=\"https://twitter.com/Wellington_NZ/status/946186808328519680\" />\n\n<Tweet url=\"https://twitter.com/Wellington_NZ/status/946187998403510272\" />\n\nMaybe the weather in Wellington is not as good as Auckland‚Ä¶ But the weather can‚Äôt be the only thing to compare (I‚Äôm already missing Mauritius‚Äô sun üòÇ).\n\n![](/images/articles/choose-city-country-front-developer/cost-living-wellington-auckland.png 'Another cost of living comparison with Auckland and Wellington')\n\n## 4. New York, Chicago or somewhere else in the USA\n\n![](/images/articles/choose-city-country-front-developer/new-york-statue-liberty.jpeg)\n\nThe USA was always on my TOP 1 choice (I went to NY 3 times) but it seems to be more and more complicated to get a job or a visa to go to the USA (Even if you have a project on [Github with more than 23 000 likes](https://github.com/thedaviddias/Front-End-Checklist) üòÖ).\n\nI don‚Äôt completely leave that option away but today, it‚Äôs more part of a dream than a reality plan.\n\nI registered on the Green Card lottery for 2018‚Ä¶ but I really don‚Äôt believe I can be so lucky‚Ä¶\n\n### Why the USA?\n\nYou may wonder: why the USA? It turns out that most of the people I admire are living in the USA. It seems to be easier to follow them being in the same country. It‚Äôs without counting on all conferences and meetups that are happening all over the country which I one day, I would like to be able to participate.\n\nBut it‚Äôs probably because I‚Äôm looking for years to find a team of Developers, Web Designers and UX who can build innovative products together sharing their knowledge and having a similar vision.\n\n> I‚Äôm looking for years to find a team of Developers, Web Designers and UX who can build innovative products together sharing their knowledge and having a similar vision.\n\n**I just had that experience once**: at [Barefoot Proximity](https://www.barefootproximity.com/) in [Cincinnati](https://en.wikipedia.org/wiki/Cincinnati), Ohio. [Julie Tran](https://www.linkedin.com/in/tranje/), Creative Director and Micky Osterman, project manager gave me in 2014 an experience I could not forget. For more than one month, I‚Äôve been working hand by hand creating a new brand website. Whereas I have much more experience today, what I tasted that month is how I would like to work with future teams.\n\n## What‚Äôs next?\n\n2018 should be an interesting year.\n\nIn January, my IELTS exam will give me more chances to complete some immigration forms.\n\nIn February, I‚Äôll start sending [my resume](https://www.linkedin.com/in/thedaviddias/) to some companies I perceive I can fit and by chance, it‚Äôll become easier to decide which country I should focus on more.\n\nIn May/June, I hope to be in the country which will give me the chance to continue creating products and websites, managing young developers and working with an awesome team of experts who see the future of the web!\n",
            "url": "https://thedaviddias.dev/articles/choose-city-country-front-developer",
            "title": "Help me to choose the best city/country to be a Front-End Developer!",
            "summary": "Choosing a new city or country to leave is not an easy task. I'm sharing my process to choose the next city where I wanna live.",
            "date_modified": "2017-12-28T13:07:27.957Z",
            "author": {
                "name": "David Dias",
                "url": "https://twitter.com/thedaviddias"
            }
        },
        {
            "id": "https://thedaviddias.dev/articles/front-end-checklist-just-tool-everything-depends-on-you",
            "content_html": "\nOne month ago, I launched the [Front-End Checklist on GitHub](https://github.com/thedaviddias/Front-End-Checklist). In less than 2 weeks, more than 10,000 people around the world starred the repository. That was completely unexpected and incredible!\n\n![A screenshot of the number of stars on Github](/images/articles/front-end-checklist-just-tool-everything-depends-on-you/featured.jpg)\n\nI‚Äôve been working as a front-end developer since 2011, but I started to build websites in [2000](http://www.csszengarden.com/). Since then, like us all, I‚Äôve been trying to improve the quality of my code and deliver websites faster. Along the way, I‚Äôve been managing developers from two different countries. That has helped me to produce a checklist a little different than what I‚Äôve found on around the web over the years.\n\nWhile I was creating the checklist, I continuously had the book ‚Äú[The Checklist Manifesto: How to Get Things Right](https://amzn.to/2k9f6XG)‚Äù by Atul Gawade in mind. That book has helped me build checklists for my work and personal life, and simplify things that sometimes seem too complex.\n\nIf you are working alone or in a team, individually, remotely, or on-site, I wanted to share some advice on using the Front-End Checklist and the [web application](http://frontendchecklist.io/) that goes with it. Perhaps I can convince you to integrate it into your development cycle.\n\n![A screenshot of the HEAD section on frontendchecklist.io](/images/articles/front-end-checklist-just-tool-everything-depends-on-you/start-to-check.jpg)\n\n## Decide which rules your project and team need to follow\n\nEvery project is different. Before starting a new project, the whole team (i.e. the project managers, designers, developers, QA, etc.) need to agree on what the deliverables will be.\n\nTo help you to decide, I created 3 different levels of priority: high, medium, and low. You don‚Äôt necessarily need to agree with those distinctions, but they may help order your tasks.\n\nThe Front-End Checklist app was done to facilitate the creation of personalized checklists. Change some JSON files to your liking and you are ready to start!\n\n## Define the rules to check at beginning, during, and at the end of your project\n\nYou shouldn‚Äôt check all these rules only at the end of a project. You know as well as I do how projects are at the very end! Too hectic. Most of the items of the Front-End Checklist can be considered at the beginning of your development. It‚Äôs up to you to decide. Make it clear to your team upfront what happens when.\n\n## Learn a little more about each rule\n\nWho loves reading the [docs](https://devdocs.io/)? Not most of us, but it‚Äôs essential. If you want to understand the reasons for the rule, you can‚Äôt avoid reading up about them. The more you understand the why of each rule, the better developer you become.\n\n## Start to check!\n\nThe [Front-End Checklist](https://frontendchecklist.io/) app can facilitate your life as a developer. It‚Äôs a live checklist, so as you complete items your progress and grade are updated live. Everything is saved in localStorage so you can leave and come back as needed.\n\nThe project is open source, so feel free to fork it and use it however you like. I‚Äôm working on making sure all the files are commented. I especially invite those interested in [Pug](https://pugjs.org/api/getting-started.html) to take a look at the [views folder](https://github.com/thedaviddias/Front-End-Checklist/tree/master/src/views).\n\n## Integrate automated testing in your workflow\n\nWe all dream of automation (or is it just me?). For now, the Front-End Checklist is just an interactive list, but some of the tasks can be automated in your workflow.\n\nTake a look at the [gulpfile](https://github.com/thedaviddias/Front-End-Checklist/blob/master/gulpfile.babel.js) used to generate the project. All tasks are packages you can use with [npm](https://scotch.io/tutorials/using-npm-as-a-build-tool), [webpack](https://webpack.js.org/), etc.\n\n## Validate every page before sending to QA team and to production\n\n![A screenshot of the print version of frontendchecklist.io](/images/articles/front-end-checklist-just-tool-everything-depends-on-you/validate-before-qa.jpg)\n\nIf you‚Äôre passionate about generating clean code and care about your code quality, you should be regularly testing your pages. It‚Äôs so easy to make mistakes and remove some essential code. Or, someone else on your team might have done it, but it‚Äôs your shared responsibilty to be catching things like that.\n\nThe Front-End Checklist can generate beautiful reports you can send to a project manager or Quality Assurance team.\n\n## Enjoy your work above all\n\nSome people might look at such a long checklist and feel sick to their stomach. Going through such a list might cause anxiety and really not be any fun.\n\nBut the Front-End Checklist is just a tool to help you deliver higher quality code. Code that affects all aspects of a project: the SEO, the user experience, the ROI, and ultimately the success of the project. A tool that can help across all those things might actually help reduce your anxiety and improve your health!\n\n## Conclusion\n\nThe success the Front-End Checklist received in such a short time reminded me that a lot of people are really interested in finding ways to improve their work. But just because the tool exists doesn‚Äôt directly help with that. You also need to commit to using it.\n\nIn a time where AI is taking over many manual tasks, quality is a must-have. Even if automation takes over a lot of our tasks, some level of quality will remain impossible to automate, and us front-end developers still have many long days to enjoy our jobs.\n",
            "url": "https://thedaviddias.dev/articles/front-end-checklist-just-tool-everything-depends-on-you",
            "title": "The Front-End Checklist is just a tool‚Ä¶ everything depends on you",
            "summary": "The steps you need to follow to efficiently use the application frontendchecklist.io",
            "date_modified": "2017-12-08T00:01:00.000Z",
            "author": {
                "name": "David Dias",
                "url": "https://twitter.com/thedaviddias"
            }
        },
        {
            "id": "https://thedaviddias.dev/articles/how-my-open-source-project-earned-6000-stars-on-github-in-just-5-days",
            "content_html": "\n![](/images/articles/how-my-open-source-project-earned-6000-stars-on-github-in-just-5-days/github-stars.jpeg 'A screenshot of the Front-End Checklist repository (numbers are already outdated since I finished writing that article)')\n\nLast month I launched two open source projects on GitHub. A few days later, my [Front-End Checklist](https://github.com/thedaviddias/Front-End-Checklist) was showing more than **6,000 stars** (17,000 as of writing). And I got 600 stars for my Resources-Front-End-Beginner project!\n\nIt was unexpected for me to receive such support coming from so many people around the globe: USA, Brazil, China, Japan, France, Canada, Spain, Mauritius, Japan, Portugal... Even now, I still can‚Äôt believe how many pull requests I received with changes and corrections these last days.\n\nFor so long I received gifts from the open source world. Now I felt it was finally time for me to give back everything I have learned, and to help others.\n\nAs a professional Front-End manager, I spend my time teaching and encouraging others to learn and practice. I regularly share interesting content and useful tools on the [Front-End Dev Mauritius group](https://www.facebook.com/groups/frontenddevmauritius/) on Facebook. But I never planned that the Front-End Checklist will become a worldwide project.\n\n## My motivations to write another Front-End checklist\n\nI‚Äôve seen some Front-End checklists over the past year on the web:\n\n- [Web Developer Checklist](http://webdevchecklist.com/)\n- [A Checklist for Website Reviews](https://drublic.de/articles/frontend-checklist/)\n- [Opquast checklist (in French)](https://checklists.opquast.com/en/)\n\nSome of them helped me years ago when I wanted to improve my Front-End knowledge, but most of them were just ‚Äúnot enough.‚Äù\n\nTwo years ago, I decided to start writing my own checklist based on my experiences. That checklist became way more important when I started to manage Front-End teams in France and Mauritius. Based on questions and usual mistakes from the teams, the content kept improving.\n\nWhen I needed to teach someone how to become a better Front-End developer, I always had in mind that checklist that I started to work on. The document which started with a simple personal need became an ambitious tool for my team.\n\nThen I started to feel the need to share it with more people.\n\nA month ago I decided to put a first version on GitHub. And‚Ä¶ at that moment, everything started to happen fast‚Ä¶ really fast.\n\n## Things can happen fast on the internet. Really fast.\n\nOn 18 October, I published the first version of my Front-End Checklist. I went to see all members of my team and I asked them to put a star üòÄ on the repository. They don‚Äôt really have the habit to star projects on Github, I had to encourage them to do so üòÇ.\n\nA few hours later, watching an episode of [Hawaii Five-O](https://en.wikipedia.org/wiki/Hawaii_Five-O) with my [wife](https://medium.com/@kajaaldias), I opened my GitHub repository on my iPad. I was shocked to find that in only few hours, I had already received 700 stars.\n\n![](/images/articles/how-my-open-source-project-earned-6000-stars-on-github-in-just-5-days/dean-surprised.gif '700 stars on Github in only few hours')\n\nI was not able to understand why and where these stars were coming from. (At that time, I didn‚Äôt know about the Insights > Traffic section on GitHub.)\n\nI hadn‚Äôt even published any tweet about the Github repository. The next day, I published on my Twitter account: just few likes and retweets about the checklist. Nothing that may explain, where everyone was coming from.\n\n<Tweet url=\"https://twitter.com/TheDavidDias/status/920894390641614848\" />\n\nI then started to validate pull requests and answer some logged issues. I was feeling so grateful for that unimaginable support. Even working daily with international websites, I forgot sometimes the power of Internet. (Or it‚Äôs maybe I‚Äôm living in a small island far from everything üòÇ.)\n\nNext day, I received on Twitter a message from Product Hunt:\n\n<Tweet url=\"https://twitter.com/ProductHuntHi/status/920896487600640001\" />\n\nWithout really taking time to think, I opened my Illustrator and designed a logo to put on the page. I kept it basic, inspired by the logo of Front-End Coders, a future NGO I‚Äôll be launching soon officially.\n\n![](/images/articles/how-my-open-source-project-earned-6000-stars-on-github-in-just-5-days/frontend-open-source-projects.jpeg 'Front-End checklist and Front-End beginners essential logos')\n\nSince then, I received in less than one week 40 pull requests, was published on Codrops for my 2 lists in their Collective #359, on the Panda Weekly Newsletter #130 and #131, Hacker news, Reddit (multiple times), NewsCenter.io, La Ferme du Web and more.\n\nTranslation in Japanese, Spanish, Chinese, Korean, Portuguese and Vietnamese were done in less than 2 weeks!\n\n![](/images/articles/how-my-open-source-project-earned-6000-stars-on-github-in-just-5-days/insights-front-end-checklist.jpeg 'Insights for the Front-End Checklist on 23 October 2017')\n\nThe list is positioned first on Google for the words ‚ÄúFront-End Checklist‚Äù. Some landing pages on Github have the checklist on first position (Front-End Development, Checklist, Guidelines).\n\nI discovered more recently that the project was on top of the trending feed on\nGitHub\nwith more than 6,000 stars in less than a week (on 27 October 2017).\n\nThe Front-End Checklist is trending on Github!\nChecklists can be more than simple checklists\nI‚Äôm a big fan of ‚ÄúAwesome‚Äù, the curated list of awesome lists created first by\nSindre Sorhus\n. But some lists are colossal and I found myself sometimes struggling to find what I want. I‚Äôm not sure if it‚Äôs because the amount of links or the absence of information attached to each link.\n\nThis is why I decided to add emoticons in my two lists. I usually don‚Äôt use them too often, but in that case I found interesting to add more of these to have more information about the content of my links.\n\nThe Front-End Checklist use emoticons to add more informations for each rule\nAs mentionned in the introduction of the Front-End Checklist, I used:\n\nüìñ for documentation or article links\nüõ† for online and / or testing tools links\nüìπ for any type media, but specially video content\nI also used 3 images (High, medium, low) to integrate different levels of priorities. I didn‚Äôt find any emoticon that could replace these images easily.\n\nThe list of resources for Front-End Beginners also use emoticons to add some additional informations.\nOn my list of resources for Front-End Beginners, for example, I decided to indicate free and paid tutorials. It‚Äôs easier to have these type of informations before you click on any link. People can directly focus on what they prefer.\n\nI use daily applications like Cloud Outliner Pro and MindNode to create new lists for my personal and professional life (and\nTodoist\n). I can‚Äôt imagine doing a complex task without a set of items into a list.\n\nIf you have something to share, share it on GitHub now!\nWhen it comes to sharing documentation or code, today, there‚Äôs no other place I like more than Github. Last week I decided I needed to put my work in a place where people can easily access and participate.\n\nThis kind of project is meant to be used and perfected by experiences and different points of view. Because Front-End development is always moving, evolving, it‚Äôs not always simple to stay on track on everything. Collaborative projects, where people can participate are for me the best way to have constantly updated tools.\n\nI regularly meet young developers and people who want to become Front-End developer. Even on my YouTube channel, I receive lot of questions and requests. The first advice I give to them is to start coding and put their work on Github. It‚Äôs a way for them to show their interests to their friends, a future recruiter and to the world.\n\nThe Front-End Code Camp is an event workshop to better understand the process of web development.\nDon‚Äôt hesitate, everything you do, related to coding and web, take time to present it correctly on an README file and click ‚Äúpush‚Äù!\n\nWhat‚Äôs next?\nBy the time I wrote this article I was already working on a small open-source web app... Today, you can already access the Front-End Checklist App online!\n\nDue to many requests, I‚Äôm already working on an NPM module which will probably be used by a future website. It was not in my initial plans but when I saw so many people asking for, I couldn‚Äôt refuse.\n\nI have much more to share! I‚Äôm working on other lists that may be as good as the Front-End Checklist‚Ä¶ Well, I hope! üòÉ\n",
            "url": "https://thedaviddias.dev/articles/how-my-open-source-project-earned-6000-stars-on-github-in-just-5-days",
            "title": "How my open source project earned 6,000 stars on GitHub in just 5 days",
            "summary": "The Front-End Checklist is my first open-source project gaining so much attraction and visibility! In this article, I explain what happen the first 5 days my project got published.",
            "date_modified": "2017-11-28T03:47:53.024Z",
            "author": {
                "name": "David Dias",
                "url": "https://twitter.com/thedaviddias"
            }
        },
        {
            "id": "https://thedaviddias.dev/articles/how-morning-routine-can-positively-change-your-life-forever",
            "content_html": "\n![](/images/articles/how-morning-routine-can-positively-change-your-life-forever/featured.jpeg 'Meditation is part of my Morning Routine now‚Ä¶')\n\nI cannot remember how many times it was hard for me to wake up in the morning. The snooze button was my best friend every morning, and I even hated when I was late to go somewhere. It was hard to believe that other ways could possibly exist when you work in my job area.\n\n> At that time, I believed only one possible way to live was possible.\n\nAs a Front-End Web Developer, these last years, sleeping 3‚Äì4 hours per night during a few successive days, drinking cups of coffee during the day (sometimes Redbull) was my ritual and my life. And I thought all developers life was close to that. To be the best, you need to go further, faster and perform better than others, and you cannot be restful, calm, have lot of leisure if you want to succeed‚Ä¶\n\n## Moving to Mauritius in 2015\n\nI was asked to move from France to Mauritius in October 2015, delaying my goal to move to North America, to help my company to grow up and to manage a Front-End team of 12 persons (today 20).\n\nI met my wife on that island, the most beautiful and Kind woman ever ([Kajaal Dias](https://twitter.com/kajaaldias)). And you may imagine I was in the paradise‚Ä¶\n\nBut in reality, it was far to be the paradise like most of my colleagues and friends may still imagine.\n\nAt that point of my life, I was not feeling accomplished; I was not really happy for what I was doing and I was not living the life I always wanted.\n\nAs most of the people, I was not able to take **real actions** and **make changes** to build something new and different.\n\n## Hacking my body to sleep only 4 hours per day\n\nIn October 2016, seeing web tutorials on Youtube, my eyes were attracted by a video title ‚Äú[My 20 Hour Day](https://www.youtube.com/watch?v=Y-TFHVIyhaU)‚Äù by [Travis Neilson](https://medium.com/@travisneilson) on his [DevTips channel](https://www.youtube.com/channel/UCyIe-61Y8C4_o-zZCtO4ETQ). And that was probably the start of lots of changes in my life.\n\nIt was the first time I heard about ‚Äú[polyphasic sleep](https://en.wikipedia.org/wiki/Biphasic_and_polyphasic_sleep)‚Äù. A way to sleep less, but being in good health and more alert than sleeping successive 8 hours. At the beginning, I thought it was another fake experiment that may work for few people only. But my curiosity pushed me to dive in some advanced research. (Thanks to Damien Fauch√© and his french ebook: ‚Äú[How to sleep only 2h per day](http://pleindetrucs.fr/guide-polyphasique/)‚Äù)\n\n---\n\nFinally, few days after, I decided to try the polyphasic sleep - Everyman 3.\n\nAt the beginning it was hard and challenging but my motivation and dedication help me not to give up. Today, it has been 4 months that I‚Äôm still sleeping 3‚Äì4 hours at night and taking 2‚Äì3 naps during the day.\n\nMy core sleeping time is between 10h30 pm to 2h30‚Äì3h00 am. I do my first nap at home before leaving for work at 7h am for 25 minutes, my second nap is at 1h pm during lunch time for 20 minutes (in my car) and the third one at home again at 6h30 pm for 25 minutes after working hours.\n\n![Screenshots of the Smart Sleep iOS appplication. It shows statistics of my hours sleeping and awake.](/images/articles/how-morning-routine-can-positively-change-your-life-forever/sleep-ios-screenshots.jpeg '<a href=\"http://www.smartsleepteam.com/\">Smart Sleep</a> on iOS helps me to track my naps and to wake up. The start was not easy.')\n\nIt is not always simple to be regular, but it‚Äôs really essential to listen to your body. I remember sometimes at the beginning sleeping much more in the weekend because I missed some naps during the weekdays. I simply took attention to my body reactions and even you need to try hard at the beginning to create a new habit, your body can adapt if your are really aware of its needs.\n\nToday I am able to fall in sleep in less than 5 minutes (I slow down my breath, put myself in a stress-free position and not let my thoughts haunt me). That helps a lot when you need to do a 20 minutes nap.\n\nSome weeks after, I started to feel that my life can be different, I could do things differently and put a real step forward to my dreams and achieve more than I always wanted to do.\n\n## Five minutes to change your way of thinking\n\nPutting a step forward in life, is putting a step ahead of others. And to feel good with others, you need to feel good in your life. And it started with me being grateful‚Ä¶\n\n> Gratitude is the quality of being thankful and simply appreciate what we have, even in general we don‚Äôt want to see how lucky we are.\n\nI started writing into ‚Äú[The Five Minute Journal](https://www.intelligentchange.com/products/the-five-minute-journal)‚Äù. It is not a journal like the others. It allows me to be grateful, mindful and plan which great things will happen during my day. I feel positive and happier when I use it.\n\n<Tweet url=\"https://twitter.com/TheDavidDias/status/818964414556672002\" />\n\nStarting my day with my journal, creating and tracking new habits were just the beginning of my journey.\n\n## The ‚ÄúMiracle Morning‚Äù saved me (S.A.V.E.R.S.)\n\nSleeping less allowed me to have time‚Ä¶ much more time (one more day in my week). And even I love my work and to be a programmer, I felt I gave maybe too much to my coding life and not to my personal life and personal growth. I needed to put a real daily routine, a way to equilibrate my life in all its aspects.\n\nAfter starting my Five Minute Journal, I discovered ‚Äú[The Miracle Morning](http://www.miraclemorning.com/)‚Äù by Hal Elrod, reading articles and [his book](https://www.amazon.com/Miracle-Morning-Not-So-Obvious-Guaranteed-Transform/dp/0979019710/ref=sr_1_1?ie=UTF8&qid=1484989057&sr=8-1&keywords=miracle+morning). That was exactly what I was looking for!\n\nThen I started to put a morning routine using my favorite Todo app (Todoist).\n\n<Tweet url=\"https://twitter.com/TheDavidDias/status/819402651662069760\" />\n\n**_S.A.V.E.R.S_** means Silence, Affirmations, Visualization, Exercises, Reading and Scribing. These 6 elements are part of my daily routine now and help me to start my day in the most positive way.\n\n## My typical Morning Routine and his apps\n\nWaking up at 2h30 am, I start my day with a **glass of water** and a personal recipe with **lemon**, water, cinnamon, cayenne, ginger, apple cider, honey and collagen (everything organic). It allows me to feel good for whatever I ate the day before or will eat during the day. That did a huge change for my stomach, and I never had any stomach problems or pain again. (Remember in Mauritius, most of the recipes are spicy).\n\nI brew my ‚ÄúKick Ass‚Äù **coffee** from [Kicking Horse Coffee](https://www.kickinghorsecoffee.com/en) with my beautiful [Java Presse](https://www.javapresse.com/) (I really love USA brands). I don‚Äôt really need coffee, but it‚Äôs more a personal pleasure for my morning ritual. (Sometimes I drink the [Bulletproof Coffee](http://www.bulletproof.com/) by [Dave Asprey](https://medium.com/@bulletproofexec) with Coconut Oil and Ghee).\n\n![](/images/articles/how-morning-routine-can-positively-change-your-life-forever/5-minutes-journal-coffee.jpg)\n\nFor **meditation** I use the excellent app [calm.com](https://www.calm.com/). It can take only 10 minutes sometimes more, but that practice in my life had a significant impact in my way I live the present and feel more peaceful. There are other useful apps like [Headspace](https://www.headspace.com/) amongst others.\n\nI wrote some **affirmations** I read every morning and before to go bed. After I take some minutes to **visualize** what I want to achieve in my day, that helps me to keep focus.\n\nI use [Day One](https://dayoneapp.com/) for **scribbing** whatever I feel or have in mind during my day and recently move to [Fields Notes](https://fieldnotesbrand.com/) for my [Morning Pages](http://juliacameronlive.com/basic-tools/morning-pages/) (thanks to [Loic Le Meur](https://medium.com/@loic)).\n\nI put [Brain.fm](https://www.brain.fm/) for 15 minutes (with my headphones) and read at least for 15 minutes. I created a list of books on [Evernote](https://medium.com/@evernote) I want to read each week and month. I‚Äôm challenging myself with [Goodreads](https://www.goodreads.com/user/show/60055286-david-dias) to read 50 books in 2017‚Ä¶ I am late already‚Ä¶ :)\n\nI regularly undertake activities like coding, watching tutorials, design, social media updates, new projects depending on the day. It is normally between 1h to 1h30 hours in the morning and oneextra hour in the evening.\n\nThen when my wife wakes up, we go for a 20 minutes **walk** in the park near our apartment. Before I take my shower, 5 minutes of **plank** and 5 minutes of **shaper**, it‚Äôs enough for me to sweat and feel good.\n\nI add when I have 20 minutes free some Yoga exercises with the help of [Daily Yoga](https://www.dailyyoga.com/#/). Otherwise I participate every Saturday morning to a session class.\n\n![The most beautiful and clean park you can find in Mauritius](/images/articles/how-morning-routine-can-positively-change-your-life-forever/park-mauritius.jpg)\n\nI take my cold shower hearing my favorite podcasts [The School of Greatness](http://lewishowes.com/category/podcast/) by Lewis Howes, The [5 AM miracle](https://www.jeffsanders.com/the-5-am-miracle-podcast/) by Jeff Sanders and [The Tim Ferris Show](http://fourhourworkweek.com/podcast/) by Tim Ferriss. Can‚Äôt leave home without hearing these guys!\n\nSince few weeks, I‚Äôm practicing [Intermittent Fasting](https://en.wikipedia.org/wiki/Intermittent_fasting), so I don‚Äôt take breakfast but instead, I prepare a natural juice with cucumber, lemon, parsley, apple, carrot, wheat grass and with all others vegetables and fruits I find around.\n\nDuring my short trajet to work (10 minutes), I listen with my wife some best-selling nonfiction books using [Blinkist](https://www.blinkist.com/). I really recommend you to take a premium account, it is worths every penny.\n\nThen I start my day at work with some other routines I may share in another article.\n\n(I use to track some new habits on my mini-book ‚ÄúTrack your habits‚Äù by [kikki.k](http://www.kikki-k.com/) and with the [Coach.me app](https://www.coach.me/).)\n\n## My new habits and Routines are only at the beginning\n\nExperimenting lot of new things in the previous 4 months, give me the will to go further and do everything I can to achieve my goals and dreams.\n\nI know I‚Äôm still adjusting with my Morning Routine, but I can‚Äôt go back after all what I discovered, all people I meet that give me some mindfulness and clarity in the life. I‚Äôm so grateful for all of this.\n\nNothing can stop me now to fulfill every single unique present moment of my life.\n\n---\n\n## Tell me about your Daily or Morning Routine\n\nAnd you, do you have a daily or morning routine?\n\nWhat you do daily to **improve your life**, **achieve your goals** and take actions **to build the life you want**?\n",
            "url": "https://thedaviddias.dev/articles/how-morning-routine-can-positively-change-your-life-forever",
            "title": "How a Morning Routine can positively change your life forever",
            "summary": "Having a Morning Routine can positively change your life in so many good ways. Through experimentation, I explore ways to improve my health and my mindset.",
            "date_modified": "2017-01-21T00:01:00.000Z",
            "author": {
                "name": "David Dias",
                "url": "https://twitter.com/thedaviddias"
            }
        }
    ]
}